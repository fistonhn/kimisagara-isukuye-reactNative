{"ast":null,"code":"import*as React from'react';export default function useChildListeners(){var _React$useRef=React.useRef({action:[],focus:[]}),listeners=_React$useRef.current;var addListener=React.useCallback(function(type,listener){listeners[type].push(listener);var removed=false;return function(){var index=listeners[type].indexOf(listener);if(!removed&&index>-1){removed=true;listeners[type].splice(index,1);}};},[listeners]);return{listeners:listeners,addListener:addListener};}","map":{"version":3,"mappings":"AAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAOA,cAAe,SAASC,kBAAT,EAA6B,CAC1C,kBAA+BD,KAAK,CAACE,MAAN,CAE5B,CACDC,MAAM,CAAE,EADP,CAEDC,KAAK,CAAE,EAFN,CAF4B,CAA/B,CAAiBC,wBAATC,OAAO,CAOf,GAAMC,YAAW,CAAGP,KAAK,CAACQ,WAAN,CAClB,SAA8BC,IAA9B,CAAuCC,QAAvC,CAAoE,CAClEL,SAAS,CAACI,IAAD,CAAT,CAAgBE,IAAhB,CAAqBD,QAArB,EAEA,GAAIE,QAAO,CAAG,KAAd,CACA,MAAO,WAAM,CACX,GAAMC,MAAK,CAAGR,SAAS,CAACI,IAAD,CAAT,CAAgBK,OAAhB,CAAwBJ,QAAxB,CAAd,CAEA,GAAI,CAACE,OAAD,EAAYC,KAAK,CAAG,CAAC,CAAzB,CAA4B,CAC1BD,OAAO,CAAG,IAAV,CACAP,SAAS,CAACI,IAAD,CAAT,CAAgBM,MAAhB,CAAuBF,KAAvB,CAA8B,CAA9B,EACD,CACF,CAPD,CAQD,CAbiB,CAclB,CAACR,SAAD,CAdkB,CAApB,CAiBA,MAAO,CACLA,SADK,CACLA,SADK,CAELE,uBAFK,CAAP,CAID","names":["React","useChildListeners","useRef","action","focus","listeners","current","addListener","useCallback","type","listener","push","removed","index","indexOf","splice"],"sources":["useChildListeners.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { ListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add action listeners.\n */\nexport default function useChildListeners() {\n  const { current: listeners } = React.useRef<{\n    [K in keyof ListenerMap]: ListenerMap[K][];\n  }>({\n    action: [],\n    focus: [],\n  });\n\n  const addListener = React.useCallback(\n    <T extends keyof ListenerMap>(type: T, listener: ListenerMap[T]) => {\n      listeners[type].push(listener);\n\n      let removed = false;\n      return () => {\n        const index = listeners[type].indexOf(listener);\n\n        if (!removed && index > -1) {\n          removed = true;\n          listeners[type].splice(index, 1);\n        }\n      };\n    },\n    [listeners]\n  );\n\n  return {\n    listeners,\n    addListener,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}