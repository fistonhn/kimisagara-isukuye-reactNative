{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import Text from\"react-native-web/dist/exports/Text\";import React,{Component}from'react';import{recipes,categories,ingredients}from\"./dataArrays\";export function getCategoryById(categoryId){var category;categories.map(function(data){if(data.id==categoryId){category=data;}});return category;}export function getIngredientName(ingredientID){var name;ingredients.map(function(data){if(data.ingredientId==ingredientID){name=data.name;}});return name;}export function getIngredientUrl(ingredientID){var url;ingredients.map(function(data){if(data.ingredientId==ingredientID){url=data.photo_url;}});return url;}export function getCategoryName(categoryId){var name;categories.map(function(data){if(data.id==categoryId){name=data.name;}});return name;}export function getRecipes(categoryId){var recipesArray=[];recipes.map(function(data){if(data.categoryId==categoryId){recipesArray.push(data);}});return recipesArray;}export function getRecipesByIngredient(ingredientId){var recipesArray=[];recipes.map(function(data){data.ingredients.map(function(index){if(index[0]==ingredientId){recipesArray.push(data);}});});return recipesArray;}export function getNumberOfRecipes(categoryId){var count=0;recipes.map(function(data){if(data.categoryId==categoryId){count++;}});return count;}export function getAllIngredients(idArray){var ingredientsArray=[];idArray.map(function(index){ingredients.map(function(data){if(data.ingredientId==index[0]){ingredientsArray.push([data,index[1]]);}});});return ingredientsArray;}export function getRecipesByIngredientName(ingredientName){var nameUpper=ingredientName.toUpperCase();var recipesArray=[];ingredients.map(function(data){if(data.name.toUpperCase().includes(nameUpper)){var _recipes=getRecipesByIngredient(data.ingredientId);var unique=_toConsumableArray(new Set(_recipes));unique.map(function(item){recipesArray.push(item);});}});var uniqueArray=_toConsumableArray(new Set(recipesArray));return uniqueArray;}export function getRecipesByCategoryName(categoryName){var nameUpper=categoryName.toUpperCase();var recipesArray=[];categories.map(function(data){if(data.name.toUpperCase().includes(nameUpper)){var _recipes2=getRecipes(data.id);_recipes2.map(function(item){recipesArray.push(item);});}});return recipesArray;}export function getRecipesByRecipeName(recipeName){var nameUpper=recipeName.toUpperCase();var recipesArray=[];recipes.map(function(data){if(data.title.toUpperCase().includes(nameUpper)){recipesArray.push(data);}});return recipesArray;}","map":{"version":3,"names":["React","Component","recipes","categories","ingredients","getCategoryById","categoryId","category","map","data","id","getIngredientName","ingredientID","name","ingredientId","getIngredientUrl","url","photo_url","getCategoryName","getRecipes","recipesArray","push","getRecipesByIngredient","index","getNumberOfRecipes","count","getAllIngredients","idArray","ingredientsArray","getRecipesByIngredientName","ingredientName","nameUpper","toUpperCase","includes","unique","Set","item","uniqueArray","getRecipesByCategoryName","categoryName","getRecipesByRecipeName","recipeName","title"],"sources":["F:/kimisagara/official/recipes-app-react-native/src/data/MockDataAPI.js"],"sourcesContent":["import { Text } from 'react-native';\r\nimport React, { Component } from 'react';\r\nimport { recipes, categories, ingredients } from './dataArrays';\r\n\r\nexport function getCategoryById(categoryId) {\r\n  let category;\r\n  categories.map(data => {\r\n    if (data.id == categoryId) {\r\n      category = data;\r\n    }\r\n  });\r\n  return category;\r\n}\r\n\r\nexport function getIngredientName(ingredientID) {\r\n  let name;\r\n  ingredients.map(data => {\r\n    if (data.ingredientId == ingredientID) {\r\n      name = data.name;\r\n    }\r\n  });\r\n  return name;\r\n}\r\n\r\nexport function getIngredientUrl(ingredientID) {\r\n  let url;\r\n  ingredients.map(data => {\r\n    if (data.ingredientId == ingredientID) {\r\n      url = data.photo_url;\r\n    }\r\n  });\r\n  return url;\r\n}\r\n\r\nexport function getCategoryName(categoryId) {\r\n  let name;\r\n  categories.map(data => {\r\n    if (data.id == categoryId) {\r\n      name = data.name;\r\n    }\r\n  });\r\n  return name;\r\n}\r\n\r\nexport function getRecipes(categoryId) {\r\n  const recipesArray = [];\r\n  recipes.map(data => {\r\n    if (data.categoryId == categoryId) {\r\n      recipesArray.push(data);\r\n    }\r\n  });\r\n  return recipesArray;\r\n}\r\n\r\n// modifica\r\nexport function getRecipesByIngredient(ingredientId) {\r\n  const recipesArray = [];\r\n  recipes.map(data => {\r\n    data.ingredients.map(index => {\r\n      if (index[0] == ingredientId) {\r\n        recipesArray.push(data);\r\n      }\r\n    });\r\n  });\r\n  return recipesArray;\r\n}\r\n\r\nexport function getNumberOfRecipes(categoryId) {\r\n  let count = 0;\r\n  recipes.map(data => {\r\n    if (data.categoryId == categoryId) {\r\n      count++;\r\n    }\r\n  });\r\n  return count;\r\n}\r\n\r\nexport function getAllIngredients(idArray) {\r\n  const ingredientsArray = [];\r\n  idArray.map(index => {\r\n    ingredients.map(data => {\r\n      if (data.ingredientId == index[0]) {\r\n        ingredientsArray.push([data, index[1]]);\r\n      }\r\n    });\r\n  });\r\n  return ingredientsArray;\r\n}\r\n\r\n// functions for search\r\nexport function getRecipesByIngredientName(ingredientName) {\r\n  const nameUpper = ingredientName.toUpperCase();\r\n  const recipesArray = [];\r\n  ingredients.map(data => {\r\n    if (data.name.toUpperCase().includes(nameUpper)) {\r\n      // data.name.yoUpperCase() == nameUpper\r\n      const recipes = getRecipesByIngredient(data.ingredientId);\r\n      const unique = [...new Set(recipes)];\r\n      unique.map(item => {\r\n        recipesArray.push(item);\r\n      });\r\n    }\r\n  });\r\n  const uniqueArray = [...new Set(recipesArray)];\r\n  return uniqueArray;\r\n}\r\n\r\nexport function getRecipesByCategoryName(categoryName) {\r\n  const nameUpper = categoryName.toUpperCase();\r\n  const recipesArray = [];\r\n  categories.map(data => {\r\n    if (data.name.toUpperCase().includes(nameUpper)) {\r\n      const recipes = getRecipes(data.id); // return a vector of recipes\r\n      recipes.map(item => {\r\n        recipesArray.push(item);\r\n      });\r\n    }\r\n  });\r\n  return recipesArray;\r\n}\r\n\r\nexport function getRecipesByRecipeName(recipeName) {\r\n  const nameUpper = recipeName.toUpperCase();\r\n  const recipesArray = [];\r\n  recipes.map(data => {\r\n    if (data.title.toUpperCase().includes(nameUpper)) {\r\n      recipesArray.push(data);\r\n    }\r\n  });\r\n  return recipesArray;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}