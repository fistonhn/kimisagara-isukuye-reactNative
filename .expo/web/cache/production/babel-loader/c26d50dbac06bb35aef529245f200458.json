{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import\"./environment/react-native-logs.fx\";import{Platform}from'expo-modules-core';import*as React from'react';import AppRegistry from\"react-native-web/dist/exports/AppRegistry\";import DevAppContainer from\"./environment/DevAppContainer\";if(__DEV__){if(Platform.OS==='web'&&!('__fbBatchedBridgeConfig'in global)){Object.defineProperty(global,'__fbBatchedBridgeConfig',{get:function get(){throw new Error(\"Your web project is importing a module from 'react-native' instead of 'react-native-web'. Learn more: https://expo.fyi/fb-batched-bridge-config-web\");}});}AppRegistry.setWrapperComponentProvider(function(){return DevAppContainer;});var originalSetWrapperComponentProvider=AppRegistry.setWrapperComponentProvider;AppRegistry.setWrapperComponentProvider=function(provider){function PatchedProviderComponent(props){var ProviderComponent=provider();return React.createElement(DevAppContainer,null,React.createElement(ProviderComponent,_objectSpread({},props)));}originalSetWrapperComponentProvider(function(){return PatchedProviderComponent;});};}","map":{"version":3,"mappings":"w0BAAA,2CAEA,OAASA,QAAQ,KAAQ,mBAAmB,CAC5C,MAAO,GAAKC,MAAK,KAAM,OAAO,CAAC,mEAG/B,MAAOC,gBAAe,qCAKtB,GAAIC,OAAO,CAAE,CAEX,GAEEH,QAAQ,CAACI,EAAE,GAAK,KAAK,EAErB,EAAE,yBAAyB,EAAIC,OAAM,CAAC,CACtC,CACAC,MAAM,CAACC,cAAc,CAACF,MAAM,CAAE,yBAAyB,CAAE,CACvDG,GAAG,gBACD,KAAM,IAAIC,MAAK,CACb,qJAAqJ,CACtJ,CACH,EACD,CAAC,EAKJC,WAAW,CAACC,2BAA2B,CAAC,iBAAMT,gBAAe,GAAC,CAG9D,GAAMU,oCAAmC,CAAGF,WAAW,CAACC,2BAA2B,CAGnFD,WAAW,CAACC,2BAA2B,CAAG,SAACE,QAAQ,CAAI,CACrD,QAASC,yBAAwB,CAACC,KAAU,EAC1C,GAAMC,kBAAiB,CAAGH,QAAQ,EAAE,CAEpC,MACEZ,qBAACC,eAAe,MACdD,oBAACe,iBAAiB,kBAAKD,KAAK,EAAI,CAChB,CAEtB,CAEAH,mCAAmC,CAAC,iBAAME,yBAAwB,GAAC,CACrE,CAAC","names":["Platform","React","DevAppContainer","__DEV__","OS","global","Object","defineProperty","get","Error","AppRegistry","setWrapperComponentProvider","originalSetWrapperComponentProvider","provider","PatchedProviderComponent","props","ProviderComponent"],"sourceRoot":"","sources":["../src/Expo.fx.web.tsx"],"sourcesContent":["import './environment/react-native-logs.fx';\n\nimport { Platform } from 'expo-modules-core';\nimport * as React from 'react';\nimport { AppRegistry } from 'react-native';\n\nimport DevAppContainer from './environment/DevAppContainer';\n\n// When users dangerously import a file inside of react-native, it breaks the web alias.\n// This is one of the most common, and cryptic web errors that users encounter.\n// This conditional side-effect provides a more helpful error message for debugging.\nif (__DEV__) {\n  // Use a wrapper `__DEV__` to remove this entire block in production.\n  if (\n    // Only on web platforms.\n    Platform.OS === 'web' &&\n    // Skip mocking if someone is shimming this value out.\n    !('__fbBatchedBridgeConfig' in global)\n  ) {\n    Object.defineProperty(global, '__fbBatchedBridgeConfig', {\n      get() {\n        throw new Error(\n          \"Your web project is importing a module from 'react-native' instead of 'react-native-web'. Learn more: https://expo.fyi/fb-batched-bridge-config-web\"\n        );\n      },\n    });\n  }\n\n  // add the dev app container wrapper component to web\n  // @ts-ignore\n  AppRegistry.setWrapperComponentProvider(() => DevAppContainer);\n\n  // @ts-ignore\n  const originalSetWrapperComponentProvider = AppRegistry.setWrapperComponentProvider;\n\n  // @ts-ignore\n  AppRegistry.setWrapperComponentProvider = (provider) => {\n    function PatchedProviderComponent(props: any) {\n      const ProviderComponent = provider();\n\n      return (\n        <DevAppContainer>\n          <ProviderComponent {...props} />\n        </DevAppContainer>\n      );\n    }\n\n    originalSetWrapperComponentProvider(() => PatchedProviderComponent);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}