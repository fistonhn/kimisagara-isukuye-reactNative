{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"enabled\"],_excluded2=[\"visible\",\"children\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{ResourceSavingView}from'@react-navigation/elements';import*as React from'react';import View from\"react-native-web/dist/exports/View\";var Screens;try{Screens=require('react-native-screens');}catch(e){}export var MaybeScreenContainer=function MaybeScreenContainer(_ref){var _Screens,_Screens$screensEnabl;var enabled=_ref.enabled,rest=_objectWithoutProperties(_ref,_excluded);if((_Screens=Screens)!==null&&_Screens!==void 0&&(_Screens$screensEnabl=_Screens.screensEnabled)!==null&&_Screens$screensEnabl!==void 0&&_Screens$screensEnabl.call(_Screens)){return React.createElement(Screens.ScreenContainer,_extends({enabled:enabled},rest));}return React.createElement(View,rest);};export function MaybeScreen(_ref2){var _Screens2,_Screens2$screensEnab;var visible=_ref2.visible,children=_ref2.children,rest=_objectWithoutProperties(_ref2,_excluded2);if((_Screens2=Screens)!==null&&_Screens2!==void 0&&(_Screens2$screensEnab=_Screens2.screensEnabled)!==null&&_Screens2$screensEnab!==void 0&&_Screens2$screensEnab.call(_Screens2)){return React.createElement(Screens.Screen,_extends({activityState:visible?2:0},rest),children);}return React.createElement(ResourceSavingView,_extends({visible:visible},rest),children);}","map":{"version":3,"mappings":"waAAA,OAASA,kBAAT,KAAmC,4BAAnC,CACA,MAAO,GAAKC,MAAZ,KAAuB,OAAvB,sDAWA,GAAIC,QAAJ,CAEA,GAAI,CACFA,OAAO,CAAGC,OAAO,CAAC,sBAAD,CAAjB,CACD,CAAC,MAAOC,CAAP,CAAU,CAEX,CAED,MAAO,IAAMC,qBAAoB,CAAG,QAAvBA,qBAAoB,CAAGC,KAO9B,uCANJC,QADmC,CAO/BD,KANJC,OADmC,CAEhCC,8BAKCF,gBACJ,aAAIJ,OAAJ,oDAAIO,SAASC,cAAb,0CAAIC,oCAAJ,CAAiC,CAC/B,MAAOV,qBAACC,OAAD,CAASU,eAAT,WAAyBL,OAAO,CAAEA,OAAlC,EAA+CC,IAA/C,EAAP,CACD,CAED,MAAOP,qBAACY,IAAD,CAAUL,IAAV,CAAP,CACD,CAbM,CAeP,MAAO,SAASM,YAAT,OAA4D,wCAArCC,QAAF,CAAuCC,MAArCD,OAAF,CAAWE,QAAX,CAAuCD,MAA5BC,QAAX,CAAwBT,8BAAeQ,kBACjE,cAAId,OAAJ,qDAAIgB,UAASR,cAAb,0CAAIS,qCAAJ,CAAiC,CAC/B,MACElB,qBAACC,OAAD,CAASkB,MAAT,WAAgBC,aAAa,CAAEN,OAAO,CAAG,CAAH,CAAO,CAA7C,EAAoDP,IAApD,EACGS,QADH,CADF,CAKD,CAED,MACEhB,qBAACD,kBAAD,WAAoBe,OAAO,CAAEA,OAA7B,EAA0CP,IAA1C,EACGS,QADH,CADF,CAKD","names":["ResourceSavingView","React","Screens","require","e","MaybeScreenContainer","_ref","enabled","rest","_Screens","screensEnabled","_Screens$screensEnabl","ScreenContainer","View","MaybeScreen","visible","_ref2","children","_Screens2","_Screens2$screensEnab","Screen","activityState"],"sources":["ScreenFallback.tsx"],"sourcesContent":["import { ResourceSavingView } from '@react-navigation/elements';\nimport * as React from 'react';\nimport { StyleProp, View, ViewProps, ViewStyle } from 'react-native';\n\ntype Props = {\n  visible: boolean;\n  children: React.ReactNode;\n  enabled: boolean;\n  freezeOnBlur?: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  hasTwoStates: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Screens?.screensEnabled?.()) {\n    return <Screens.ScreenContainer enabled={enabled} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport function MaybeScreen({ visible, children, ...rest }: Props) {\n  if (Screens?.screensEnabled?.()) {\n    return (\n      <Screens.Screen activityState={visible ? 2 : 0} {...rest}>\n        {children}\n      </Screens.Screen>\n    );\n  }\n\n  return (\n    <ResourceSavingView visible={visible} {...rest}>\n      {children}\n    </ResourceSavingView>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}