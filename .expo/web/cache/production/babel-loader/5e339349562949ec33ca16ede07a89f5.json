{"ast":null,"code":"import React,{useLayoutEffect}from\"react\";import FlatList from\"react-native-web/dist/exports/FlatList\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import styles from\"./styles\";import{categories}from\"../../data/dataArrays\";import{getNumberOfRecipes}from\"../../data/MockDataAPI\";import MenuImage from\"../../components/MenuImage/MenuImage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function CategoriesScreen(props){var navigation=props.navigation;useLayoutEffect(function(){navigation.setOptions({headerTitleStyle:{fontWeight:\"bold\",textAlign:\"center\",alignSelf:\"center\",flex:1},headerLeft:function headerLeft(){return _jsx(MenuImage,{onPress:function onPress(){navigation.openDrawer();}});},headerRight:function headerRight(){return _jsx(View,{});}});},[]);var onPressCategory=function onPressCategory(item){var title=item.name;var category=item;navigation.navigate(\"RecipesList\",{category:category,title:title});};var renderCategory=function renderCategory(_ref){var item=_ref.item;return _jsx(TouchableHighlight,{underlayColor:\"rgba(73,182,77,0.9)\",onPress:function onPress(){return onPressCategory(item);},children:_jsxs(View,{style:styles.categoriesItemContainer,children:[_jsx(Image,{style:styles.categoriesPhoto,source:{uri:item.photo_url}}),_jsx(Text,{style:styles.categoriesName,children:item.name}),_jsxs(Text,{style:styles.categoriesInfo,children:[getNumberOfRecipes(item.id),\" recipes\"]})]})});};return _jsx(View,{children:_jsx(FlatList,{data:categories,renderItem:renderCategory,keyExtractor:function keyExtractor(item){return\"\"+item.id;}})});}","map":{"version":3,"names":["React","useLayoutEffect","styles","categories","getNumberOfRecipes","MenuImage","CategoriesScreen","props","navigation","setOptions","headerTitleStyle","fontWeight","textAlign","alignSelf","flex","headerLeft","openDrawer","headerRight","onPressCategory","item","title","name","category","navigate","renderCategory","categoriesItemContainer","categoriesPhoto","uri","photo_url","categoriesName","categoriesInfo","id"],"sources":["F:/kimisagara/official/recipes-app-react-native/src/screens/Categories/CategoriesScreen.js"],"sourcesContent":["import React, { useLayoutEffect } from \"react\";\r\nimport { FlatList, Text, View, Image, TouchableHighlight } from \"react-native\";\r\nimport styles from \"./styles\";\r\nimport { categories } from \"../../data/dataArrays\";\r\nimport { getNumberOfRecipes } from \"../../data/MockDataAPI\";\r\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\r\n\r\nexport default function CategoriesScreen(props) {\r\n  const { navigation } = props;\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerTitleStyle: {\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n        alignSelf: \"center\",\r\n        flex: 1,\r\n      },\r\n      headerLeft: () => (\r\n        <MenuImage\r\n          onPress={() => {\r\n            navigation.openDrawer();\r\n          }}\r\n        />\r\n      ),\r\n      headerRight: () => <View />,\r\n    });\r\n  }, []);\r\n\r\n  const onPressCategory = (item) => {\r\n    const title = item.name;\r\n    const category = item;\r\n    navigation.navigate(\"RecipesList\", { category, title });\r\n  };\r\n\r\n  const renderCategory = ({ item }) => (\r\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressCategory(item)}>\r\n      <View style={styles.categoriesItemContainer}>\r\n        <Image style={styles.categoriesPhoto} source={{ uri: item.photo_url }} />\r\n        <Text style={styles.categoriesName}>{item.name}</Text>\r\n        <Text style={styles.categoriesInfo}>{getNumberOfRecipes(item.id)} recipes</Text>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n\r\n  return (\r\n    <View>\r\n      <FlatList data={categories} renderItem={renderCategory} keyExtractor={(item) => `${item.id}`} />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,eAAe,KAAQ,OAAO,CAAC,+SAE/C,MAAOC,OAAM,gBACb,OAASC,UAAU,6BACnB,OAASC,kBAAkB,8BAC3B,MAAOC,UAAS,4CAA6C,wFAE7D,cAAe,SAASC,iBAAgB,CAACC,KAAK,CAAE,CAC9C,GAAQC,WAAU,CAAKD,KAAK,CAApBC,UAAU,CAElBP,eAAe,CAAC,UAAM,CACpBO,UAAU,CAACC,UAAU,CAAC,CACpBC,gBAAgB,CAAE,CAChBC,UAAU,CAAE,MAAM,CAClBC,SAAS,CAAE,QAAQ,CACnBC,SAAS,CAAE,QAAQ,CACnBC,IAAI,CAAE,CACR,CAAC,CACDC,UAAU,CAAE,4BACV,MAAC,SAAS,EACR,OAAO,CAAE,kBAAM,CACbP,UAAU,CAACQ,UAAU,EAAE,CACzB,CAAE,EACF,EACH,CACDC,WAAW,CAAE,6BAAM,MAAC,IAAI,IAAG,EAC7B,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,CAAIC,IAAI,CAAK,CAChC,GAAMC,MAAK,CAAGD,IAAI,CAACE,IAAI,CACvB,GAAMC,SAAQ,CAAGH,IAAI,CACrBX,UAAU,CAACe,QAAQ,CAAC,aAAa,CAAE,CAAED,QAAQ,CAARA,QAAQ,CAAEF,KAAK,CAALA,KAAM,CAAC,CAAC,CACzD,CAAC,CAED,GAAMI,eAAc,CAAG,QAAjBA,eAAc,UAAML,KAAI,MAAJA,IAAI,OAC5B,MAAC,kBAAkB,EAAC,aAAa,CAAC,qBAAqB,CAAC,OAAO,CAAE,yBAAMD,gBAAe,CAACC,IAAI,CAAC,EAAC,UAC3F,MAAC,IAAI,EAAC,KAAK,CAAEjB,MAAM,CAACuB,uBAAwB,WAC1C,KAAC,KAAK,EAAC,KAAK,CAAEvB,MAAM,CAACwB,eAAgB,CAAC,MAAM,CAAE,CAAEC,GAAG,CAAER,IAAI,CAACS,SAAU,CAAE,EAAG,CACzE,KAAC,IAAI,EAAC,KAAK,CAAE1B,MAAM,CAAC2B,cAAe,UAAEV,IAAI,CAACE,IAAI,EAAQ,CACtD,MAAC,IAAI,EAAC,KAAK,CAAEnB,MAAM,CAAC4B,cAAe,WAAE1B,kBAAkB,CAACe,IAAI,CAACY,EAAE,CAAC,cAAgB,GAC3E,EACY,EACtB,CAED,MACE,MAAC,IAAI,WACH,KAAC,QAAQ,EAAC,IAAI,CAAE5B,UAAW,CAAC,UAAU,CAAEqB,cAAe,CAAC,YAAY,CAAE,sBAACL,IAAI,WAAQA,IAAI,CAACY,EAAE,EAAG,EAAG,EAC3F,CAEX"},"metadata":{},"sourceType":"module"}