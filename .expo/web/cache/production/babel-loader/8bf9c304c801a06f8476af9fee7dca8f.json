{"ast":null,"code":"import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{Background,getDefaultHeaderHeight,SafeAreaProviderCompat}from'@react-navigation/elements';import Color from'color';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{forModalPresentationIOS,forNoAnimation as forNoAnimationCard}from\"../../TransitionConfigs/CardStyleInterpolators\";import{DefaultTransition,ModalFadeTransition,ModalTransition}from\"../../TransitionConfigs/TransitionPresets\";import getDistanceForDirection from\"../../utils/getDistanceForDirection\";import{MaybeScreen,MaybeScreenContainer}from\"../Screens\";import{getIsModalPresentation}from\"./Card\";import CardContainer from\"./CardContainer\";var EPSILON=1e-5;var STATE_INACTIVE=0;var STATE_TRANSITIONING_OR_BELOW_TOP=1;var STATE_ON_TOP=2;var FALLBACK_DESCRIPTOR=Object.freeze({options:{}});var getInterpolationIndex=function getInterpolationIndex(scenes,index){var cardStyleInterpolator=scenes[index].descriptor.options.cardStyleInterpolator;var interpolationIndex=0;for(var i=index-1;i>=0;i--){var _scenes$i;var cardStyleInterpolatorCurrent=(_scenes$i=scenes[i])===null||_scenes$i===void 0?void 0:_scenes$i.descriptor.options.cardStyleInterpolator;if(cardStyleInterpolatorCurrent!==cardStyleInterpolator){break;}interpolationIndex++;}return interpolationIndex;};var getIsModal=function getIsModal(scene,interpolationIndex,isParentModal){if(isParentModal){return true;}var cardStyleInterpolator=scene.descriptor.options.cardStyleInterpolator;var isModalPresentation=getIsModalPresentation(cardStyleInterpolator);var isModal=isModalPresentation&&interpolationIndex!==0;return isModal;};var getHeaderHeights=function getHeaderHeights(scenes,insets,isParentHeaderShown,isParentModal,layout,previous){return scenes.reduce(function(acc,curr,index){var _curr$descriptor$opti=curr.descriptor.options,_curr$descriptor$opti2=_curr$descriptor$opti.headerStatusBarHeight,headerStatusBarHeight=_curr$descriptor$opti2===void 0?isParentHeaderShown?0:insets.top:_curr$descriptor$opti2,headerStyle=_curr$descriptor$opti.headerStyle;var style=StyleSheet.flatten(headerStyle||{});var height='height'in style&&typeof style.height==='number'?style.height:previous[curr.route.key];var interpolationIndex=getInterpolationIndex(scenes,index);var isModal=getIsModal(curr,interpolationIndex,isParentModal);acc[curr.route.key]=typeof height==='number'?height:getDefaultHeaderHeight(layout,isModal,headerStatusBarHeight);return acc;},{});};var getDistanceFromOptions=function getDistanceFromOptions(layout,descriptor){var _ref4=(descriptor===null||descriptor===void 0?void 0:descriptor.options)||{},presentation=_ref4.presentation,_ref4$gestureDirectio=_ref4.gestureDirection,gestureDirection=_ref4$gestureDirectio===void 0?presentation==='modal'?ModalTransition.gestureDirection:DefaultTransition.gestureDirection:_ref4$gestureDirectio;return getDistanceForDirection(layout,gestureDirection);};var getProgressFromGesture=function getProgressFromGesture(gesture,layout,descriptor){var distance=getDistanceFromOptions({width:Math.max(1,layout.width),height:Math.max(1,layout.height)},descriptor);if(distance>0){return gesture.interpolate({inputRange:[0,distance],outputRange:[1,0]});}return gesture.interpolate({inputRange:[distance,0],outputRange:[0,1]});};var CardStack=function(_React$Component){_inherits(CardStack,_React$Component);var _super=_createSuper(CardStack);function CardStack(_props){var _this;_classCallCheck(this,CardStack);_this=_super.call(this,_props);_defineProperty(_assertThisInitialized(_this),\"handleLayout\",function(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;var layout={width:width,height:height};_this.setState(function(state,props){if(height===state.layout.height&&width===state.layout.width){return null;}return{layout:layout,headerHeights:getHeaderHeights(state.scenes,props.insets,props.isParentHeaderShown,props.isParentModal,layout,state.headerHeights)};});});_defineProperty(_assertThisInitialized(_this),\"handleHeaderLayout\",function(_ref){var route=_ref.route,height=_ref.height;_this.setState(function(_ref2){var headerHeights=_ref2.headerHeights;var previousHeight=headerHeights[route.key];if(previousHeight===height){return null;}return{headerHeights:_objectSpread(_objectSpread({},headerHeights),{},_defineProperty2({},route.key,height))};});});_defineProperty(_assertThisInitialized(_this),\"getFocusedRoute\",function(){var state=_this.props.state;return state.routes[state.index];});_defineProperty(_assertThisInitialized(_this),\"getPreviousScene\",function(_ref3){var route=_ref3.route;var getPreviousRoute=_this.props.getPreviousRoute;var scenes=_this.state.scenes;var previousRoute=getPreviousRoute({route:route});if(previousRoute){var previousScene=scenes.find(function(scene){return scene.descriptor.route.key===previousRoute.key;});return previousScene;}return undefined;});_this.state={routes:[],scenes:[],gestures:{},layout:SafeAreaProviderCompat.initialMetrics.frame,descriptors:_this.props.descriptors,headerHeights:{}};return _this;}_createClass(CardStack,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,insets=_this$props.insets,state=_this$props.state,routes=_this$props.routes,closingRouteKeys=_this$props.closingRouteKeys,onOpenRoute=_this$props.onOpenRoute,onCloseRoute=_this$props.onCloseRoute,renderHeader=_this$props.renderHeader,renderScene=_this$props.renderScene,isParentHeaderShown=_this$props.isParentHeaderShown,isParentModal=_this$props.isParentModal,onTransitionStart=_this$props.onTransitionStart,onTransitionEnd=_this$props.onTransitionEnd,onGestureStart=_this$props.onGestureStart,onGestureEnd=_this$props.onGestureEnd,onGestureCancel=_this$props.onGestureCancel,_this$props$detachIna=_this$props.detachInactiveScreens,detachInactiveScreens=_this$props$detachIna===void 0?Platform.OS==='web'||Platform.OS==='android'||Platform.OS==='ios':_this$props$detachIna;var _this$state=this.state,scenes=_this$state.scenes,layout=_this$state.layout,gestures=_this$state.gestures,headerHeights=_this$state.headerHeights;var focusedRoute=state.routes[state.index];var focusedHeaderHeight=headerHeights[focusedRoute.key];var isFloatHeaderAbsolute=this.state.scenes.slice(-2).some(function(scene){var _scene$descriptor$opt;var options=(_scene$descriptor$opt=scene.descriptor.options)!==null&&_scene$descriptor$opt!==void 0?_scene$descriptor$opt:{};var headerMode=options.headerMode,headerTransparent=options.headerTransparent,_options$headerShown=options.headerShown,headerShown=_options$headerShown===void 0?true:_options$headerShown;if(headerTransparent||headerShown===false||headerMode==='screen'){return true;}return false;});var activeScreensLimit=1;for(var i=scenes.length-1;i>=0;i--){var options=scenes[i].descriptor.options;var _options$detachPrevio=options.detachPreviousScreen,detachPreviousScreen=_options$detachPrevio===void 0?options.presentation==='transparentModal'?false:getIsModalPresentation(options.cardStyleInterpolator)?i!==scenes.map(function(scene){return scene.descriptor.options.cardStyleInterpolator;}).lastIndexOf(forModalPresentationIOS):true:_options$detachPrevio;if(detachPreviousScreen===false){activeScreensLimit++;}else{if(i<=scenes.length-2){break;}}}var floatingHeader=React.createElement(React.Fragment,{key:\"header\"},renderHeader({mode:'float',layout:layout,scenes:scenes,getPreviousScene:this.getPreviousScene,getFocusedRoute:this.getFocusedRoute,onContentHeightChange:this.handleHeaderLayout,style:[styles.floating,isFloatHeaderAbsolute&&[{height:focusedHeaderHeight},styles.absolute]]}));return React.createElement(Background,null,isFloatHeaderAbsolute?null:floatingHeader,React.createElement(MaybeScreenContainer,{enabled:detachInactiveScreens,style:styles.container,onLayout:this.handleLayout},routes.map(function(route,index,self){var _scenes,_scenes2;var focused=focusedRoute.key===route.key;var gesture=gestures[route.key];var scene=scenes[index];var isScreenActive=1;if(index<self.length-activeScreensLimit-1){isScreenActive=STATE_INACTIVE;}else{var sceneForActivity=scenes[self.length-1];var outputValue=index===self.length-1?STATE_ON_TOP:index>=self.length-activeScreensLimit?STATE_TRANSITIONING_OR_BELOW_TOP:STATE_INACTIVE;isScreenActive=sceneForActivity?sceneForActivity.progress.current.interpolate({inputRange:[0,1-EPSILON,1],outputRange:[1,1,outputValue],extrapolate:'clamp'}):STATE_TRANSITIONING_OR_BELOW_TOP;}var _scene$descriptor$opt2=scene.descriptor.options,_scene$descriptor$opt3=_scene$descriptor$opt2.headerShown,headerShown=_scene$descriptor$opt3===void 0?true:_scene$descriptor$opt3,headerTransparent=_scene$descriptor$opt2.headerTransparent,headerStyle=_scene$descriptor$opt2.headerStyle,headerTintColor=_scene$descriptor$opt2.headerTintColor,freezeOnBlur=_scene$descriptor$opt2.freezeOnBlur;var safeAreaInsetTop=insets.top;var safeAreaInsetRight=insets.right;var safeAreaInsetBottom=insets.bottom;var safeAreaInsetLeft=insets.left;var headerHeight=headerShown!==false?headerHeights[route.key]:0;var headerDarkContent;if(headerShown){if(typeof headerTintColor==='string'){headerDarkContent=Color(headerTintColor).isDark();}else{var flattenedHeaderStyle=StyleSheet.flatten(headerStyle);if(flattenedHeaderStyle&&'backgroundColor'in flattenedHeaderStyle&&typeof flattenedHeaderStyle.backgroundColor==='string'){headerDarkContent=!Color(flattenedHeaderStyle.backgroundColor).isDark();}}}var interpolationIndex=getInterpolationIndex(scenes,index);var isModal=getIsModal(scene,interpolationIndex,isParentModal);var isNextScreenTransparent=((_scenes=scenes[index+1])===null||_scenes===void 0?void 0:_scenes.descriptor.options.presentation)==='transparentModal';var detachCurrentScreen=((_scenes2=scenes[index+1])===null||_scenes2===void 0?void 0:_scenes2.descriptor.options.detachPreviousScreen)!==false;return React.createElement(MaybeScreen,{key:route.key,style:StyleSheet.absoluteFill,enabled:detachInactiveScreens,active:isScreenActive,freezeOnBlur:freezeOnBlur,pointerEvents:\"box-none\"},React.createElement(CardContainer,{index:index,interpolationIndex:interpolationIndex,modal:isModal,active:index===self.length-1,focused:focused,closing:closingRouteKeys.includes(route.key),layout:layout,gesture:gesture,scene:scene,safeAreaInsetTop:safeAreaInsetTop,safeAreaInsetRight:safeAreaInsetRight,safeAreaInsetBottom:safeAreaInsetBottom,safeAreaInsetLeft:safeAreaInsetLeft,onGestureStart:onGestureStart,onGestureCancel:onGestureCancel,onGestureEnd:onGestureEnd,headerHeight:headerHeight,isParentHeaderShown:isParentHeaderShown,onHeaderHeightChange:_this2.handleHeaderLayout,getPreviousScene:_this2.getPreviousScene,getFocusedRoute:_this2.getFocusedRoute,headerDarkContent:headerDarkContent,hasAbsoluteFloatHeader:isFloatHeaderAbsolute&&!headerTransparent,renderHeader:renderHeader,renderScene:renderScene,onOpenRoute:onOpenRoute,onCloseRoute:onCloseRoute,onTransitionStart:onTransitionStart,onTransitionEnd:onTransitionEnd,isNextScreenTransparent:isNextScreenTransparent,detachCurrentScreen:detachCurrentScreen}));})),isFloatHeaderAbsolute?floatingHeader:null);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.routes===state.routes&&props.descriptors===state.descriptors){return null;}var gestures=props.routes.reduce(function(acc,curr){var descriptor=props.descriptors[curr.key];var _ref5=(descriptor===null||descriptor===void 0?void 0:descriptor.options)||{},animationEnabled=_ref5.animationEnabled;acc[curr.key]=state.gestures[curr.key]||new Animated.Value(props.openingRouteKeys.includes(curr.key)&&animationEnabled!==false?getDistanceFromOptions(state.layout,descriptor):0);return acc;},{});var scenes=props.routes.map(function(route,index,self){var _descriptor$options$h;var previousRoute=self[index-1];var nextRoute=self[index+1];var oldScene=state.scenes[index];var currentGesture=gestures[route.key];var previousGesture=previousRoute?gestures[previousRoute.key]:undefined;var nextGesture=nextRoute?gestures[nextRoute.key]:undefined;var descriptor=props.descriptors[route.key]||state.descriptors[route.key]||(oldScene?oldScene.descriptor:FALLBACK_DESCRIPTOR);var nextDescriptor=props.descriptors[nextRoute===null||nextRoute===void 0?void 0:nextRoute.key]||state.descriptors[nextRoute===null||nextRoute===void 0?void 0:nextRoute.key];var previousDescriptor=props.descriptors[previousRoute===null||previousRoute===void 0?void 0:previousRoute.key]||state.descriptors[previousRoute===null||previousRoute===void 0?void 0:previousRoute.key];var optionsForTransitionConfig=index!==self.length-1&&nextDescriptor&&nextDescriptor.options.presentation!=='transparentModal'?nextDescriptor.options:descriptor.options;var defaultTransitionPreset=optionsForTransitionConfig.presentation==='modal'?ModalTransition:optionsForTransitionConfig.presentation==='transparentModal'?ModalFadeTransition:DefaultTransition;var _optionsForTransition=optionsForTransitionConfig.animationEnabled,animationEnabled=_optionsForTransition===void 0?Platform.OS!=='web'&&Platform.OS!=='windows'&&Platform.OS!=='macos':_optionsForTransition,_optionsForTransition2=optionsForTransitionConfig.gestureEnabled,gestureEnabled=_optionsForTransition2===void 0?Platform.OS==='ios'&&animationEnabled:_optionsForTransition2,_optionsForTransition3=optionsForTransitionConfig.gestureDirection,gestureDirection=_optionsForTransition3===void 0?defaultTransitionPreset.gestureDirection:_optionsForTransition3,_optionsForTransition4=optionsForTransitionConfig.transitionSpec,transitionSpec=_optionsForTransition4===void 0?defaultTransitionPreset.transitionSpec:_optionsForTransition4,_optionsForTransition5=optionsForTransitionConfig.cardStyleInterpolator,cardStyleInterpolator=_optionsForTransition5===void 0?animationEnabled===false?forNoAnimationCard:defaultTransitionPreset.cardStyleInterpolator:_optionsForTransition5,_optionsForTransition6=optionsForTransitionConfig.headerStyleInterpolator,headerStyleInterpolator=_optionsForTransition6===void 0?defaultTransitionPreset.headerStyleInterpolator:_optionsForTransition6,_optionsForTransition7=optionsForTransitionConfig.cardOverlayEnabled,cardOverlayEnabled=_optionsForTransition7===void 0?Platform.OS!=='ios'&&optionsForTransitionConfig.presentation!=='transparentModal'||getIsModalPresentation(cardStyleInterpolator):_optionsForTransition7;var headerMode=(_descriptor$options$h=descriptor.options.headerMode)!==null&&_descriptor$options$h!==void 0?_descriptor$options$h:!(optionsForTransitionConfig.presentation==='modal'||optionsForTransitionConfig.presentation==='transparentModal'||(nextDescriptor===null||nextDescriptor===void 0?void 0:nextDescriptor.options.presentation)==='modal'||(nextDescriptor===null||nextDescriptor===void 0?void 0:nextDescriptor.options.presentation)==='transparentModal'||getIsModalPresentation(cardStyleInterpolator))&&Platform.OS==='ios'&&descriptor.options.header===undefined?'float':'screen';var scene={route:route,descriptor:_objectSpread(_objectSpread({},descriptor),{},{options:_objectSpread(_objectSpread({},descriptor.options),{},{animationEnabled:animationEnabled,cardOverlayEnabled:cardOverlayEnabled,cardStyleInterpolator:cardStyleInterpolator,gestureDirection:gestureDirection,gestureEnabled:gestureEnabled,headerStyleInterpolator:headerStyleInterpolator,transitionSpec:transitionSpec,headerMode:headerMode})}),progress:{current:getProgressFromGesture(currentGesture,state.layout,descriptor),next:nextGesture&&(nextDescriptor===null||nextDescriptor===void 0?void 0:nextDescriptor.options.presentation)!=='transparentModal'?getProgressFromGesture(nextGesture,state.layout,nextDescriptor):undefined,previous:previousGesture?getProgressFromGesture(previousGesture,state.layout,previousDescriptor):undefined},__memo:[state.layout,descriptor,nextDescriptor,previousDescriptor,currentGesture,nextGesture,previousGesture]};if(oldScene&&scene.__memo.every(function(it,i){return oldScene.__memo[i]===it;})){return oldScene;}return scene;});return{routes:props.routes,scenes:scenes,gestures:gestures,descriptors:props.descriptors,headerHeights:getHeaderHeights(scenes,props.insets,props.isParentHeaderShown,props.isParentModal,state.layout,state.headerHeights)};}}]);return CardStack;}(React.Component);export{CardStack as default};var styles=StyleSheet.create({container:{flex:1},absolute:{position:'absolute',top:0,left:0,right:0},floating:{zIndex:1}});","map":{"version":3,"mappings":"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","names":["Background","getDefaultHeaderHeight","SafeAreaProviderCompat","Color","React","forModalPresentationIOS","forNoAnimation","forNoAnimationCard","DefaultTransition","ModalFadeTransition","ModalTransition","getDistanceForDirection","MaybeScreen","MaybeScreenContainer","getIsModalPresentation","CardContainer","EPSILON","STATE_INACTIVE","STATE_TRANSITIONING_OR_BELOW_TOP","STATE_ON_TOP","FALLBACK_DESCRIPTOR","Object","freeze","options","getInterpolationIndex","scenes","index","cardStyleInterpolator","descriptor","interpolationIndex","i","cardStyleInterpolatorCurrent","_scenes$i","getIsModal","scene","isParentModal","isModalPresentation","isModal","getHeaderHeights","insets","isParentHeaderShown","layout","previous","reduce","acc","curr","headerStatusBarHeight","top","headerStyle","style","StyleSheet","flatten","height","route","key","getDistanceFromOptions","presentation","gestureDirection","getProgressFromGesture","gesture","distance","width","Math","max","interpolate","inputRange","outputRange","CardStack","constructor","props","_defineProperty","e","nativeEvent","setState","state","headerHeights","_ref","_ref2","previousHeight","routes","_ref3","getPreviousRoute","previousRoute","previousScene","find","undefined","gestures","initialMetrics","frame","descriptors","render","closingRouteKeys","onOpenRoute","onCloseRoute","renderHeader","renderScene","onTransitionStart","onTransitionEnd","onGestureStart","onGestureEnd","onGestureCancel","detachInactiveScreens","Platform","OS","focusedRoute","focusedHeaderHeight","isFloatHeaderAbsolute","slice","some","headerMode","headerTransparent","headerShown","activeScreensLimit","length","detachPreviousScreen","map","lastIndexOf","floatingHeader","Fragment","mode","getPreviousScene","getFocusedRoute","onContentHeightChange","handleHeaderLayout","styles","floating","absolute","enabled","container","onLayout","handleLayout","self","focused","isScreenActive","sceneForActivity","outputValue","progress","current","extrapolate","headerTintColor","freezeOnBlur","safeAreaInsetTop","safeAreaInsetRight","right","safeAreaInsetBottom","bottom","safeAreaInsetLeft","left","headerHeight","headerDarkContent","isDark","flattenedHeaderStyle","backgroundColor","isNextScreenTransparent","detachCurrentScreen","absoluteFill","active","pointerEvents","modal","closing","includes","onHeaderHeightChange","hasAbsoluteFloatHeader","animationEnabled","Animated","Value","openingRouteKeys","nextRoute","oldScene","currentGesture","previousGesture","nextGesture","nextDescriptor","previousDescriptor","optionsForTransitionConfig","defaultTransitionPreset","gestureEnabled","transitionSpec","headerStyleInterpolator","cardOverlayEnabled","header","next","__memo","every","it","Component","create","flex","position","zIndex"],"sources":["CardStack.tsx"],"sourcesContent":["import {\n  Background,\n  getDefaultHeaderHeight,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  Route,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport {\n  forModalPresentationIOS,\n  forNoAnimation as forNoAnimationCard,\n} from '../../TransitionConfigs/CardStyleInterpolators';\nimport {\n  DefaultTransition,\n  ModalFadeTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport type {\n  Layout,\n  Scene,\n  StackDescriptor,\n  StackDescriptorMap,\n  StackHeaderMode,\n  StackNavigationOptions,\n} from '../../types';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport { MaybeScreen, MaybeScreenContainer } from '../Screens';\nimport { getIsModalPresentation } from './Card';\nimport CardContainer from './CardContainer';\n\ntype GestureValues = {\n  [key: string]: Animated.Value;\n};\n\ntype Props = {\n  insets: EdgeInsets;\n  state: StackNavigationState<ParamListBase>;\n  descriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  isParentHeaderShown: boolean;\n  isParentModal: boolean;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onGestureStart: (props: { route: Route<string> }) => void;\n  onGestureEnd: (props: { route: Route<string> }) => void;\n  onGestureCancel: (props: { route: Route<string> }) => void;\n  detachInactiveScreens?: boolean;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene[];\n  gestures: GestureValues;\n  layout: Layout;\n  headerHeights: Record<string, number>;\n};\n\nconst EPSILON = 1e-5;\n\nconst STATE_INACTIVE = 0;\nconst STATE_TRANSITIONING_OR_BELOW_TOP = 1;\nconst STATE_ON_TOP = 2;\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getInterpolationIndex = (scenes: Scene[], index: number) => {\n  const { cardStyleInterpolator } = scenes[index].descriptor.options;\n\n  // Start from current card and count backwards the number of cards with same interpolation\n  let interpolationIndex = 0;\n\n  for (let i = index - 1; i >= 0; i--) {\n    const cardStyleInterpolatorCurrent =\n      scenes[i]?.descriptor.options.cardStyleInterpolator;\n\n    if (cardStyleInterpolatorCurrent !== cardStyleInterpolator) {\n      break;\n    }\n\n    interpolationIndex++;\n  }\n\n  return interpolationIndex;\n};\n\nconst getIsModal = (\n  scene: Scene,\n  interpolationIndex: number,\n  isParentModal: boolean\n) => {\n  if (isParentModal) {\n    return true;\n  }\n\n  const { cardStyleInterpolator } = scene.descriptor.options;\n  const isModalPresentation = getIsModalPresentation(cardStyleInterpolator);\n  const isModal = isModalPresentation && interpolationIndex !== 0;\n\n  return isModal;\n};\n\nconst getHeaderHeights = (\n  scenes: Scene[],\n  insets: EdgeInsets,\n  isParentHeaderShown: boolean,\n  isParentModal: boolean,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  return scenes.reduce<Record<string, number>>((acc, curr, index) => {\n    const {\n      headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n      headerStyle,\n    } = curr.descriptor.options;\n\n    const style = StyleSheet.flatten(headerStyle || {});\n\n    const height =\n      'height' in style && typeof style.height === 'number'\n        ? style.height\n        : previous[curr.route.key];\n\n    const interpolationIndex = getInterpolationIndex(scenes, index);\n    const isModal = getIsModal(curr, interpolationIndex, isParentModal);\n\n    acc[curr.route.key] =\n      typeof height === 'number'\n        ? height\n        : getDefaultHeaderHeight(layout, isModal, headerStatusBarHeight);\n\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const {\n    presentation,\n    gestureDirection = presentation === 'modal'\n      ? ModalTransition.gestureDirection\n      : DefaultTransition.gestureDirection,\n  } = (descriptor?.options || {}) as StackNavigationOptions;\n\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nconst getProgressFromGesture = (\n  gesture: Animated.Value,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const distance = getDistanceFromOptions(\n    {\n      // Make sure that we have a non-zero distance, otherwise there will be incorrect progress\n      // This causes blank screen on web if it was previously inside container with display: none\n      width: Math.max(1, layout.width),\n      height: Math.max(1, layout.height),\n    },\n    descriptor\n  );\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0],\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1],\n  });\n};\n\nexport default class CardStack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(\n    props: Props,\n    state: State\n  ): Partial<State> | null {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const gestures = props.routes.reduce<GestureValues>((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const { animationEnabled } = descriptor?.options || {};\n\n      acc[curr.key] =\n        state.gestures[curr.key] ||\n        new Animated.Value(\n          props.openingRouteKeys.includes(curr.key) &&\n          animationEnabled !== false\n            ? getDistanceFromOptions(state.layout, descriptor)\n            : 0\n        );\n\n      return acc;\n    }, {});\n\n    const scenes = props.routes.map((route, index, self) => {\n      const previousRoute = self[index - 1];\n      const nextRoute = self[index + 1];\n\n      const oldScene = state.scenes[index];\n\n      const currentGesture = gestures[route.key];\n      const previousGesture = previousRoute\n        ? gestures[previousRoute.key]\n        : undefined;\n      const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n\n      const descriptor =\n        props.descriptors[route.key] ||\n        state.descriptors[route.key] ||\n        (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n\n      const nextDescriptor =\n        props.descriptors[nextRoute?.key] || state.descriptors[nextRoute?.key];\n\n      const previousDescriptor =\n        props.descriptors[previousRoute?.key] ||\n        state.descriptors[previousRoute?.key];\n\n      // When a screen is not the last, it should use next screen's transition config\n      // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n      // For example combining a slide and a modal transition would look wrong otherwise\n      // With this approach, combining different transition styles in the same navigator mostly looks right\n      // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n      // but majority of the transitions look alright\n      const optionsForTransitionConfig =\n        index !== self.length - 1 &&\n        nextDescriptor &&\n        nextDescriptor.options.presentation !== 'transparentModal'\n          ? nextDescriptor.options\n          : descriptor.options;\n\n      let defaultTransitionPreset =\n        optionsForTransitionConfig.presentation === 'modal'\n          ? ModalTransition\n          : optionsForTransitionConfig.presentation === 'transparentModal'\n          ? ModalFadeTransition\n          : DefaultTransition;\n\n      const {\n        animationEnabled = Platform.OS !== 'web' &&\n          Platform.OS !== 'windows' &&\n          Platform.OS !== 'macos',\n        gestureEnabled = Platform.OS === 'ios' && animationEnabled,\n        gestureDirection = defaultTransitionPreset.gestureDirection,\n        transitionSpec = defaultTransitionPreset.transitionSpec,\n        cardStyleInterpolator = animationEnabled === false\n          ? forNoAnimationCard\n          : defaultTransitionPreset.cardStyleInterpolator,\n        headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n        cardOverlayEnabled = (Platform.OS !== 'ios' &&\n          optionsForTransitionConfig.presentation !== 'transparentModal') ||\n          getIsModalPresentation(cardStyleInterpolator),\n      } = optionsForTransitionConfig;\n\n      const headerMode: StackHeaderMode =\n        descriptor.options.headerMode ??\n        (!(\n          optionsForTransitionConfig.presentation === 'modal' ||\n          optionsForTransitionConfig.presentation === 'transparentModal' ||\n          nextDescriptor?.options.presentation === 'modal' ||\n          nextDescriptor?.options.presentation === 'transparentModal' ||\n          getIsModalPresentation(cardStyleInterpolator)\n        ) &&\n        Platform.OS === 'ios' &&\n        descriptor.options.header === undefined\n          ? 'float'\n          : 'screen');\n\n      const scene = {\n        route,\n        descriptor: {\n          ...descriptor,\n          options: {\n            ...descriptor.options,\n            animationEnabled,\n            cardOverlayEnabled,\n            cardStyleInterpolator,\n            gestureDirection,\n            gestureEnabled,\n            headerStyleInterpolator,\n            transitionSpec,\n            headerMode,\n          },\n        },\n        progress: {\n          current: getProgressFromGesture(\n            currentGesture,\n            state.layout,\n            descriptor\n          ),\n          next:\n            nextGesture &&\n            nextDescriptor?.options.presentation !== 'transparentModal'\n              ? getProgressFromGesture(\n                  nextGesture,\n                  state.layout,\n                  nextDescriptor\n                )\n              : undefined,\n          previous: previousGesture\n            ? getProgressFromGesture(\n                previousGesture,\n                state.layout,\n                previousDescriptor\n              )\n            : undefined,\n        },\n        __memo: [\n          state.layout,\n          descriptor,\n          nextDescriptor,\n          previousDescriptor,\n          currentGesture,\n          nextGesture,\n          previousGesture,\n        ],\n      };\n\n      if (\n        oldScene &&\n        scene.__memo.every((it, i) => {\n          // @ts-expect-error: we haven't added __memo to the annotation to prevent usage elsewhere\n          return oldScene.__memo[i] === it;\n        })\n      ) {\n        return oldScene;\n      }\n\n      return scene;\n    });\n\n    return {\n      routes: props.routes,\n      scenes,\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(\n        scenes,\n        props.insets,\n        props.isParentHeaderShown,\n        props.isParentModal,\n        state.layout,\n        state.headerHeights\n      ),\n    };\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      routes: [],\n      scenes: [],\n      gestures: {},\n      layout: SafeAreaProviderCompat.initialMetrics.frame,\n      descriptors: this.props.descriptors,\n      // Used when card's header is null and mode is float to make transition\n      // between screens with headers and those without headers smooth.\n      // This is not a great heuristic here. We don't know synchronously\n      // on mount what the header height is so we have just used the most\n      // common cases here.\n      headerHeights: {},\n    };\n  }\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const layout = { width, height };\n\n    this.setState((state, props) => {\n      if (height === state.layout.height && width === state.layout.width) {\n        return null;\n      }\n\n      return {\n        layout,\n        headerHeights: getHeaderHeights(\n          state.scenes,\n          props.insets,\n          props.isParentHeaderShown,\n          props.isParentModal,\n          layout,\n          state.headerHeights\n        ),\n      };\n    });\n  };\n\n  private handleHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    this.setState(({ headerHeights }) => {\n      const previousHeight = headerHeights[route.key];\n\n      if (previousHeight === height) {\n        return null;\n      }\n\n      return {\n        headerHeights: {\n          ...headerHeights,\n          [route.key]: height,\n        },\n      };\n    });\n  };\n\n  private getFocusedRoute = () => {\n    const { state } = this.props;\n\n    return state.routes[state.index];\n  };\n\n  private getPreviousScene = ({ route }: { route: Route<string> }) => {\n    const { getPreviousRoute } = this.props;\n    const { scenes } = this.state;\n\n    const previousRoute = getPreviousRoute({ route });\n\n    if (previousRoute) {\n      const previousScene = scenes.find(\n        (scene) => scene.descriptor.route.key === previousRoute.key\n      );\n\n      return previousScene;\n    }\n\n    return undefined;\n  };\n\n  render() {\n    const {\n      insets,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      renderHeader,\n      renderScene,\n      isParentHeaderShown,\n      isParentModal,\n      onTransitionStart,\n      onTransitionEnd,\n      onGestureStart,\n      onGestureEnd,\n      onGestureCancel,\n      detachInactiveScreens = Platform.OS === 'web' ||\n        Platform.OS === 'android' ||\n        Platform.OS === 'ios',\n    } = this.props;\n\n    const { scenes, layout, gestures, headerHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedHeaderHeight = headerHeights[focusedRoute.key];\n\n    const isFloatHeaderAbsolute = this.state.scenes.slice(-2).some((scene) => {\n      const options = scene.descriptor.options ?? {};\n      const { headerMode, headerTransparent, headerShown = true } = options;\n\n      if (\n        headerTransparent ||\n        headerShown === false ||\n        headerMode === 'screen'\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n\n    let activeScreensLimit = 1;\n\n    for (let i = scenes.length - 1; i >= 0; i--) {\n      const { options } = scenes[i].descriptor;\n      const {\n        // By default, we don't want to detach the previous screen of the active one for modals\n        detachPreviousScreen = options.presentation === 'transparentModal'\n          ? false\n          : getIsModalPresentation(options.cardStyleInterpolator)\n          ? i !==\n            scenes\n              .map((scene) => scene.descriptor.options.cardStyleInterpolator)\n              .lastIndexOf(forModalPresentationIOS)\n          : true,\n      } = options;\n\n      if (detachPreviousScreen === false) {\n        activeScreensLimit++;\n      } else {\n        // Check at least last 2 screens before stopping\n        // This will make sure that screen isn't detached when another screen is animating on top of the transparent one\n        // For example, (Opaque -> Transparent -> Opaque)\n        if (i <= scenes.length - 2) {\n          break;\n        }\n      }\n    }\n\n    const floatingHeader = (\n      <React.Fragment key=\"header\">\n        {renderHeader({\n          mode: 'float',\n          layout,\n          scenes,\n          getPreviousScene: this.getPreviousScene,\n          getFocusedRoute: this.getFocusedRoute,\n          onContentHeightChange: this.handleHeaderLayout,\n          style: [\n            styles.floating,\n            isFloatHeaderAbsolute && [\n              // Without this, the header buttons won't be touchable on Android when headerTransparent: true\n              { height: focusedHeaderHeight },\n              styles.absolute,\n            ],\n          ],\n        })}\n      </React.Fragment>\n    );\n\n    return (\n      <Background>\n        {isFloatHeaderAbsolute ? null : floatingHeader}\n        <MaybeScreenContainer\n          enabled={detachInactiveScreens}\n          style={styles.container}\n          onLayout={this.handleLayout}\n        >\n          {routes.map((route, index, self) => {\n            const focused = focusedRoute.key === route.key;\n            const gesture = gestures[route.key];\n            const scene = scenes[index];\n\n            // For the screens that shouldn't be active, the value is 0\n            // For those that should be active, but are not the top screen, the value is 1\n            // For those on top of the stack and with interaction enabled, the value is 2\n            // For the old implementation, it stays the same it was\n            let isScreenActive: Animated.AnimatedInterpolation | 2 | 1 | 0 = 1;\n\n            if (index < self.length - activeScreensLimit - 1) {\n              // screen should be inactive because it is too deep in the stack\n              isScreenActive = STATE_INACTIVE;\n            } else {\n              const sceneForActivity = scenes[self.length - 1];\n              const outputValue =\n                index === self.length - 1\n                  ? STATE_ON_TOP // the screen is on top after the transition\n                  : index >= self.length - activeScreensLimit\n                  ? STATE_TRANSITIONING_OR_BELOW_TOP // the screen should stay active after the transition, it is not on top but is in activeLimit\n                  : STATE_INACTIVE; // the screen should be active only during the transition, it is at the edge of activeLimit\n              isScreenActive = sceneForActivity\n                ? sceneForActivity.progress.current.interpolate({\n                    inputRange: [0, 1 - EPSILON, 1],\n                    outputRange: [1, 1, outputValue],\n                    extrapolate: 'clamp',\n                  })\n                : STATE_TRANSITIONING_OR_BELOW_TOP;\n            }\n\n            const {\n              headerShown = true,\n              headerTransparent,\n              headerStyle,\n              headerTintColor,\n              freezeOnBlur,\n            } = scene.descriptor.options;\n\n            const safeAreaInsetTop = insets.top;\n            const safeAreaInsetRight = insets.right;\n            const safeAreaInsetBottom = insets.bottom;\n            const safeAreaInsetLeft = insets.left;\n\n            const headerHeight =\n              headerShown !== false ? headerHeights[route.key] : 0;\n\n            let headerDarkContent: boolean | undefined;\n\n            if (headerShown) {\n              if (typeof headerTintColor === 'string') {\n                headerDarkContent = Color(headerTintColor).isDark();\n              } else {\n                const flattenedHeaderStyle = StyleSheet.flatten(headerStyle);\n\n                if (\n                  flattenedHeaderStyle &&\n                  'backgroundColor' in flattenedHeaderStyle &&\n                  typeof flattenedHeaderStyle.backgroundColor === 'string'\n                ) {\n                  headerDarkContent = !Color(\n                    flattenedHeaderStyle.backgroundColor\n                  ).isDark();\n                }\n              }\n            }\n\n            // Start from current card and count backwards the number of cards with same interpolation\n            const interpolationIndex = getInterpolationIndex(scenes, index);\n            const isModal = getIsModal(\n              scene,\n              interpolationIndex,\n              isParentModal\n            );\n\n            const isNextScreenTransparent =\n              scenes[index + 1]?.descriptor.options.presentation ===\n              'transparentModal';\n\n            const detachCurrentScreen =\n              scenes[index + 1]?.descriptor.options.detachPreviousScreen !==\n              false;\n\n            return (\n              <MaybeScreen\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                enabled={detachInactiveScreens}\n                active={isScreenActive}\n                freezeOnBlur={freezeOnBlur}\n                pointerEvents=\"box-none\"\n              >\n                <CardContainer\n                  index={index}\n                  interpolationIndex={interpolationIndex}\n                  modal={isModal}\n                  active={index === self.length - 1}\n                  focused={focused}\n                  closing={closingRouteKeys.includes(route.key)}\n                  layout={layout}\n                  gesture={gesture}\n                  scene={scene}\n                  safeAreaInsetTop={safeAreaInsetTop}\n                  safeAreaInsetRight={safeAreaInsetRight}\n                  safeAreaInsetBottom={safeAreaInsetBottom}\n                  safeAreaInsetLeft={safeAreaInsetLeft}\n                  onGestureStart={onGestureStart}\n                  onGestureCancel={onGestureCancel}\n                  onGestureEnd={onGestureEnd}\n                  headerHeight={headerHeight}\n                  isParentHeaderShown={isParentHeaderShown}\n                  onHeaderHeightChange={this.handleHeaderLayout}\n                  getPreviousScene={this.getPreviousScene}\n                  getFocusedRoute={this.getFocusedRoute}\n                  headerDarkContent={headerDarkContent}\n                  hasAbsoluteFloatHeader={\n                    isFloatHeaderAbsolute && !headerTransparent\n                  }\n                  renderHeader={renderHeader}\n                  renderScene={renderScene}\n                  onOpenRoute={onOpenRoute}\n                  onCloseRoute={onCloseRoute}\n                  onTransitionStart={onTransitionStart}\n                  onTransitionEnd={onTransitionEnd}\n                  isNextScreenTransparent={isNextScreenTransparent}\n                  detachCurrentScreen={detachCurrentScreen}\n                />\n              </MaybeScreen>\n            );\n          })}\n        </MaybeScreenContainer>\n        {isFloatHeaderAbsolute ? floatingHeader : null}\n      </Background>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n  floating: {\n    zIndex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}