{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{nanoid}from'nanoid/non-secure';import*as React from'react';import useLatestCallback from'use-latest-callback';import useNavigation from\"./useNavigation\";import usePreventRemoveContext from\"./usePreventRemoveContext\";import useRoute from\"./useRoute\";export default function usePreventRemove(preventRemove,callback){var _React$useState=React.useState(function(){return nanoid();}),_React$useState2=_slicedToArray(_React$useState,1),id=_React$useState2[0];var navigation=useNavigation();var _useRoute=useRoute(),routeKey=_useRoute.key;var _usePreventRemoveCont=usePreventRemoveContext(),setPreventRemove=_usePreventRemoveCont.setPreventRemove;React.useEffect(function(){setPreventRemove(id,routeKey,preventRemove);return function(){setPreventRemove(id,routeKey,false);};},[setPreventRemove,id,routeKey,preventRemove]);var beforeRemoveListener=useLatestCallback(function(e){if(!preventRemove){return;}e.preventDefault();callback({data:e.data});});React.useEffect(function(){return navigation===null||navigation===void 0?void 0:navigation.addListener('beforeRemove',beforeRemoveListener);},[navigation,beforeRemoveListener]);}","map":{"version":3,"mappings":"iEACA,OAASA,MAAT,KAAuB,mBAAvB,CACA,MAAO,GAAKC,MAAZ,KAAuB,OAAvB,CACA,MAAOC,kBAAP,KAA8B,qBAA9B,CAGA,MAAOC,cAAP,uBACA,MAAOC,wBAAP,iCACA,MAAOC,SAAP,kBAQA,cAAe,SAASC,iBAAT,CACbC,aADa,CAEbC,QAFa,CAGb,CACA,oBAAaP,KAAK,CAACQ,QAAN,CAAe,iBAAMT,OAAM,EAA3B,GAAb,oDAAOU,EAAD,qBAEN,GAAMC,WAAU,CAAGR,aAAa,EAAhC,CACA,cAA0BE,QAAQ,EAAlC,CAAaO,mBAALC,GAAG,CAEX,0BAA6BT,uBAAuB,EAApD,CAAQU,wDAERb,KAAK,CAACc,SAAN,CAAgB,UAAM,CACpBD,gBAAgB,CAACJ,EAAD,CAAKE,QAAL,CAAeL,aAAf,CAAhB,CACA,MAAO,WAAM,CACXO,gBAAgB,CAACJ,EAAD,CAAKE,QAAL,CAAe,KAAf,CAAhB,CACD,CAFD,CAGD,CALD,CAKG,CAACE,gBAAD,CAAmBJ,EAAnB,CAAuBE,QAAvB,CAAiCL,aAAjC,CALH,EAOA,GAAMS,qBAAoB,CAAGd,iBAAiB,CAE3Ce,UAAD,CAAO,CACP,GAAI,CAACV,aAAL,CAAoB,CAClB,OACD,CAEDU,CAAC,CAACC,cAAF,GAEAV,QAAQ,CAAC,CAAEW,IAAI,CAAEF,CAAC,CAACE,IAAV,CAAD,CAAR,CACD,CAV6C,CAA9C,CAYAlB,KAAK,CAACc,SAAN,CACE,iBAAMJ,WAAN,SAAMA,UAAN,iBAAMA,UAAU,CAAES,WAAZ,CAAwB,cAAxB,CAAwCJ,oBAAxC,CADR,GAEE,CAACL,UAAD,CAAaK,oBAAb,CAFF,EAID","names":["nanoid","React","useLatestCallback","useNavigation","usePreventRemoveContext","useRoute","usePreventRemove","preventRemove","callback","useState","id","navigation","routeKey","key","setPreventRemove","useEffect","beforeRemoveListener","e","preventDefault","data","addListener"],"sources":["usePreventRemove.tsx"],"sourcesContent":["import type { NavigationAction } from '@react-navigation/routers';\nimport { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\n\nimport type { EventListenerCallback, EventMapCore } from './types';\nimport useNavigation from './useNavigation';\nimport usePreventRemoveContext from './usePreventRemoveContext';\nimport useRoute from './useRoute';\n\n/**\n * Hook to prevent screen from being removed. Can be used to prevent users from leaving the screen.\n *\n * @param preventRemove Boolean indicating whether to prevent screen from being removed.\n * @param callback Function which is executed when screen was prevented from being removed.\n */\nexport default function usePreventRemove(\n  preventRemove: boolean,\n  callback: (options: { data: { action: NavigationAction } }) => void\n) {\n  const [id] = React.useState(() => nanoid());\n\n  const navigation = useNavigation();\n  const { key: routeKey } = useRoute();\n\n  const { setPreventRemove } = usePreventRemoveContext();\n\n  React.useEffect(() => {\n    setPreventRemove(id, routeKey, preventRemove);\n    return () => {\n      setPreventRemove(id, routeKey, false);\n    };\n  }, [setPreventRemove, id, routeKey, preventRemove]);\n\n  const beforeRemoveListener = useLatestCallback<\n    EventListenerCallback<EventMapCore<any>, 'beforeRemove'>\n  >((e) => {\n    if (!preventRemove) {\n      return;\n    }\n\n    e.preventDefault();\n\n    callback({ data: e.data });\n  });\n\n  React.useEffect(\n    () => navigation?.addListener('beforeRemove', beforeRemoveListener),\n    [navigation, beforeRemoveListener]\n  );\n}\n"]},"metadata":{},"sourceType":"module"}