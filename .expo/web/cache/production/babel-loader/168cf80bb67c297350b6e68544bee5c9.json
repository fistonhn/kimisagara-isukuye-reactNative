{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import pack from'react-native/package.json';var rnVersion=pack.version;export function toArray(object){if(!Array.isArray(object)){return[object];}return object;}export function withPrevAndCurrent(array,mapFn){var previousArr=[null];var currentArr=_toConsumableArray(array);var transformedArr=[];currentArr.forEach(function(current,i){var previous=previousArr[i];var transformed=mapFn(previous,current);previousArr.push(transformed);transformedArr.push(transformed);});return transformedArr;}export function hasProperty(object,key){return Object.prototype.hasOwnProperty.call(object,key);}export function isJestEnv(){return hasProperty(global,'process')&&!!process.env.JEST_WORKER_ID;}export function tagMessage(msg){return\"[react-native-gesture-handler] \"+msg;}export function isFabric(){var _global;return!!((_global=global)!==null&&_global!==void 0&&_global.nativeFabricUIManager);}export function shouldUseCodegenNativeComponent(){var _rnVersion$split=rnVersion.split('.'),_rnVersion$split2=_slicedToArray(_rnVersion$split,2),majorStr=_rnVersion$split2[0],minorStr=_rnVersion$split2[1];var major=Number.parseInt(majorStr);var minor=Number.parseInt(minorStr);return minor>=68||major>0;}export function isRemoteDebuggingEnabled(){return!global.nativeCallSyncHook||global.__REMOTEDEV__;}","map":{"version":3,"mappings":"0IAAA,MAAOA,KAAP,KAAiB,2BAAjB,CAEA,GAAMC,UAAS,CAAGD,IAAI,CAACE,OAAvB,CAEA,MAAO,SAASC,QAAT,CAAoBC,MAApB,CAA0C,CAC/C,GAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAL,CAA4B,CAC1B,MAAO,CAACA,MAAD,CAAP,CACD,CAED,MAAOA,OAAP,CACD,CAMD,MAAO,SAASG,mBAAT,CACLC,KADK,CAELC,KAFK,CAGU,CACf,GAAMC,YAAmC,CAAG,CAAC,IAAD,CAA5C,CACA,GAAMC,WAAU,oBAAOH,KAAJ,CAAnB,CACA,GAAMI,eAA6B,CAAG,EAAtC,CACAD,UAAU,CAACE,OAAX,CAAmB,SAACC,OAAD,CAAUC,CAAV,CAAgB,CACjC,GAAMC,SAAQ,CAAGN,WAAW,CAACK,CAAD,CAA5B,CACA,GAAME,YAAW,CAAGR,KAAK,CAACO,QAAD,CAAWF,OAAX,CAAzB,CACAJ,WAAW,CAACQ,IAAZ,CAAiBD,WAAjB,EACAL,cAAc,CAACM,IAAf,CAAoBD,WAApB,EACD,CALD,EAMA,MAAOL,eAAP,CACD,CAGD,MAAO,SAASO,YAAT,CAAqBf,MAArB,CAAqCgB,GAArC,CAAkD,CACvD,MAAOC,OAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCpB,MAArC,CAA6CgB,GAA7C,CAAP,CACD,CAED,MAAO,SAASK,UAAT,EAA8B,CAEnC,MAAON,YAAW,CAACO,MAAD,CAAS,SAAT,CAAX,EAAkC,CAAC,CAACC,OAAO,CAACC,GAAR,CAAYC,cAAvD,CACD,CAED,MAAO,SAASC,WAAT,CAAoBC,GAApB,CAAiC,CACtC,wCAAyCA,GAAI,CAC9C,CAID,MAAO,SAASC,SAAT,EAA6B,aAElC,MAAO,CAAC,WAACN,MAAD,4BAACO,QAAQC,qBAAT,CAAR,CACD,CAED,MAAO,SAASC,gCAAT,EAAoD,CACzD,qBAA6BlC,SAAS,CAACmC,KAAV,CAAgB,GAAhB,CAA7B,sDAAOC,QAAD,sBAAWC,QAAX,sBACN,GAAMC,MAAK,CAAGC,MAAM,CAACC,QAAP,CAAgBJ,QAAhB,CAAd,CACA,GAAMK,MAAK,CAAGF,MAAM,CAACC,QAAP,CAAgBH,QAAhB,CAAd,CAGA,MAAOI,MAAK,EAAI,EAAT,EAAeH,KAAK,CAAG,CAA9B,CACD,CAED,MAAO,SAASI,yBAAT,EAA6C,CAGlD,MAAO,CAAEjB,MAAD,CAAgBkB,kBAAjB,EAAwClB,MAAD,CAAgBmB,aAA9D,CACD","names":["pack","rnVersion","version","toArray","object","Array","isArray","withPrevAndCurrent","array","mapFn","previousArr","currentArr","transformedArr","forEach","current","i","previous","transformed","push","hasProperty","key","Object","prototype","hasOwnProperty","call","isJestEnv","global","process","env","JEST_WORKER_ID","tagMessage","msg","isFabric","_global","nativeFabricUIManager","shouldUseCodegenNativeComponent","split","majorStr","minorStr","major","Number","parseInt","minor","isRemoteDebuggingEnabled","nativeCallSyncHook","__REMOTEDEV__"],"sources":["utils.ts"],"sourcesContent":["import pack from 'react-native/package.json';\n\nconst rnVersion = pack.version;\n\nexport function toArray<T>(object: T | T[]): T[] {\n  if (!Array.isArray(object)) {\n    return [object];\n  }\n\n  return object;\n}\n\nexport type withPrevAndCurrentMapFn<T, Transformed> = (\n  previous: Transformed | null,\n  current: T\n) => Transformed;\nexport function withPrevAndCurrent<T, Transformed>(\n  array: T[],\n  mapFn: withPrevAndCurrentMapFn<T, Transformed>\n): Transformed[] {\n  const previousArr: (null | Transformed)[] = [null];\n  const currentArr = [...array];\n  const transformedArr: Transformed[] = [];\n  currentArr.forEach((current, i) => {\n    const previous = previousArr[i];\n    const transformed = mapFn(previous, current);\n    previousArr.push(transformed);\n    transformedArr.push(transformed);\n  });\n  return transformedArr;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function hasProperty(object: object, key: string) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nexport function isJestEnv(): boolean {\n  // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n  return hasProperty(global, 'process') && !!process.env.JEST_WORKER_ID;\n}\n\nexport function tagMessage(msg: string) {\n  return `[react-native-gesture-handler] ${msg}`;\n}\n\n// helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n// may not be initialized before the first render\nexport function isFabric(): boolean {\n  // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n  return !!global?.nativeFabricUIManager;\n}\n\nexport function shouldUseCodegenNativeComponent(): boolean {\n  const [majorStr, minorStr] = rnVersion.split('.');\n  const major = Number.parseInt(majorStr);\n  const minor = Number.parseInt(minorStr);\n\n  // use codegenNativeComponent starting with RN 0.68\n  return minor >= 68 || major > 0;\n}\n\nexport function isRemoteDebuggingEnabled(): boolean {\n  // react-native-reanimated checks if in remote debugging in the same way\n  // @ts-ignore global is available but node types are not included\n  return !(global as any).nativeCallSyncHook || (global as any).__REMOTEDEV__;\n}\n"]},"metadata":{},"sourceType":"module"}