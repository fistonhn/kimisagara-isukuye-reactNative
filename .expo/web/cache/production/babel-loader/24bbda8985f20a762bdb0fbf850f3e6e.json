{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"progress\",\"onPress\",\"style\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import Pressable from\"react-native-web/dist/exports/Pressable\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated,{useAnimatedProps,useAnimatedStyle}from'react-native-reanimated';var PROGRESS_EPSILON=0.05;var Overlay=React.forwardRef(function Overlay(_ref,ref){var progress=_ref.progress,onPress=_ref.onPress,style=_ref.style,props=_objectWithoutProperties(_ref,_excluded);var animatedStyle=useAnimatedStyle(function(){var _f=function _f(){return{opacity:progress.value,zIndex:progress.value>PROGRESS_EPSILON?0:-1};};_f._closure={progress:progress,PROGRESS_EPSILON:PROGRESS_EPSILON};_f.asString=\"function _f(){const{progress,PROGRESS_EPSILON}=jsThis._closure;{return{opacity:progress.value,zIndex:progress.value>PROGRESS_EPSILON?0:-1};}}\";_f.__workletHash=1802421920871;_f.__location=\"F:\\\\kimisagara\\\\official\\\\recipes-app-react-native\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Overlay.js (14:41)\";_f.__optimalization=3;return _f;}());var animatedProps=useAnimatedProps(function(){var _f=function _f(){var active=progress.value>PROGRESS_EPSILON;return{pointerEvents:active?'auto':'none',accessibilityElementsHidden:!active,importantForAccessibility:active?'auto':'no-hide-descendants'};};_f._closure={progress:progress,PROGRESS_EPSILON:PROGRESS_EPSILON};_f.asString=\"function _f(){const{progress,PROGRESS_EPSILON}=jsThis._closure;{const active=progress.value>PROGRESS_EPSILON;return{pointerEvents:active?'auto':'none',accessibilityElementsHidden:!active,importantForAccessibility:active?'auto':'no-hide-descendants'};}}\";_f.__workletHash=1603427272892;_f.__location=\"F:\\\\kimisagara\\\\official\\\\recipes-app-react-native\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Overlay.js (22:41)\";return _f;}());return React.createElement(Animated.View,_extends({},props,{ref:ref,style:[styles.overlay,overlayStyle,animatedStyle,style],animatedProps:animatedProps}),React.createElement(Pressable,{onPress:onPress,style:styles.pressable}));});var overlayStyle=Platform.select({web:{WebkitTapHighlightColor:'transparent'},default:{}});var styles=StyleSheet.create({overlay:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{backgroundColor:'rgba(0, 0, 0, 0.5)'}),pressable:{flex:1}});export default Overlay;","map":{"version":3,"mappings":"iuCAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,8LAEA,MAAOC,SAAP,EACEC,gBADF,CAEEC,gBAFF,KAGO,yBAHP,CAKA,GAAMC,iBAAgB,CAAG,IAAzB,CAOA,GAAMC,QAAO,CAAGL,KAAK,CAACM,UAAN,CAAiB,QAASD,QAAT,MAE/BE,GAF+B,CAG/B,IAFEC,SAAF,CAEAC,KAFED,QAAF,CAAYE,OAAZ,CAEAD,KAFYC,OAAZ,CAAqBC,KAArB,CAEAF,KAFqBE,KAArB,CAA+BC,+BAE/BH,gBACA,GAAMI,cAAa,CAAGV,gBAAgB,gCAAO,CAC3C,MAAO,CACLW,OAAO,CAAEN,QAAQ,CAACO,KADb,CAILC,MAAM,CAAER,QAAQ,CAACO,KAAT,CAAiBX,gBAAjB,CAAoC,CAApC,CAAwC,CAAC,CAJ5C,CAAP,CAMD,CAPqC,uBAJlCC,QAAO,kBAAGL,6YAId,CASA,GAAMiB,cAAa,CAAGf,gBAAgB,gCAAO,CAC3C,GAAMgB,OAAM,CAAGV,QAAQ,CAACO,KAAT,CAAiBX,gBAAhC,CAEA,MAAO,CACLe,aAAa,CAAED,MAAM,CAAG,MAAH,CAAY,MAD5B,CAELE,2BAA2B,CAAE,CAACF,MAFzB,CAGLG,yBAAyB,CAAEH,MAAM,CAAG,MAAH,CAAY,qBAHxC,CAAP,CAKD,CARqC,uBA3BxCV,QAAuB,kBAAvBJ,seA2BE,CAUA,MACEJ,qBAACC,QAAD,CAAUqB,IAAV,aACMV,KADN,EAEEL,GAAG,CAAEA,GAFP,CAGEI,KAAK,CAAE,CAACY,MAAM,CAACC,OAAR,CAAiBC,YAAjB,CAA+BZ,aAA/B,CAA8CF,KAA9C,CAHT,CAIEM,aAAa,CAAEA,aAJjB,GAMEjB,oBAAC0B,SAAD,EAAWhB,OAAO,CAAEA,OAApB,CAA6BC,KAAK,CAAEY,MAAM,CAACI,SAA3C,EANF,CADF,CAUD,CAjCe,CAAhB,CAmCA,GAAMF,aAAY,CAAGG,QAAQ,CAACC,MAAT,CAAwC,CAC3DC,GAAG,CAAE,CAGHC,uBAAuB,CAAE,aAHtB,CADsD,CAM3DC,OAAO,CAAE,EANkD,CAAxC,CAArB,CASA,GAAMT,OAAM,CAAGU,UAAU,CAACC,MAAX,CAAkB,CAC/BV,OAAO,gCACFS,UAAU,CAACE,kBADP,MAEPC,eAAe,CAAE,sBAHY,CAK/BT,SAAS,CAAE,CACTU,IAAI,CAAE,CADG,CALoB,CAAlB,CAAf,CAUA,cAAehC,QAAf","names":["React","Animated","useAnimatedProps","useAnimatedStyle","PROGRESS_EPSILON","Overlay","forwardRef","ref","progress","_ref","onPress","style","props","animatedStyle","opacity","value","zIndex","animatedProps","active","pointerEvents","accessibilityElementsHidden","importantForAccessibility","View","styles","overlay","overlayStyle","Pressable","pressable","Platform","select","web","WebkitTapHighlightColor","default","StyleSheet","create","absoluteFillObject","backgroundColor","flex"],"sources":["Overlay.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated, {\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\nconst PROGRESS_EPSILON = 0.05;\n\ntype Props = React.ComponentProps<typeof Animated.View> & {\n  progress: Animated.SharedValue<number>;\n  onPress: () => void;\n};\n\nconst Overlay = React.forwardRef(function Overlay(\n  { progress, onPress, style, ...props }: Props,\n  ref: React.Ref<Animated.View>\n) {\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: progress.value,\n      // We don't want the user to be able to press through the overlay when drawer is open\n      // We can send the overlay behind the screen to avoid it\n      zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1,\n    };\n  });\n\n  const animatedProps = useAnimatedProps(() => {\n    const active = progress.value > PROGRESS_EPSILON;\n\n    return {\n      pointerEvents: active ? 'auto' : 'none',\n      accessibilityElementsHidden: !active,\n      importantForAccessibility: active ? 'auto' : 'no-hide-descendants',\n    } as const;\n  });\n\n  return (\n    <Animated.View\n      {...props}\n      ref={ref}\n      style={[styles.overlay, overlayStyle, animatedStyle, style]}\n      animatedProps={animatedProps}\n    >\n      <Pressable onPress={onPress} style={styles.pressable} />\n    </Animated.View>\n  );\n});\n\nconst overlayStyle = Platform.select<Record<string, string>>({\n  web: {\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    WebkitTapHighlightColor: 'transparent',\n  },\n  default: {},\n});\n\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  pressable: {\n    flex: 1,\n  },\n});\n\nexport default Overlay;\n"]},"metadata":{},"sourceType":"module"}