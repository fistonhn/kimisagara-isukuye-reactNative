{"ast":null,"code":"import mergeOptions from'merge-options';var merge=mergeOptions.bind({concatArrays:true,ignoreUndefined:true});function mergeLocalStorageItem(key,value){var oldValue=window.localStorage.getItem(key);if(oldValue){var oldObject=JSON.parse(oldValue);var newObject=JSON.parse(value);var nextValue=JSON.stringify(merge(oldObject,newObject));window.localStorage.setItem(key,nextValue);}else{window.localStorage.setItem(key,value);}}function createPromise(getValue,callback){return new Promise(function(resolve,reject){try{var value=getValue();callback===null||callback===void 0?void 0:callback(null,value);resolve(value);}catch(err){callback===null||callback===void 0?void 0:callback(err);reject(err);}});}function createPromiseAll(promises,callback,processResult){return Promise.all(promises).then(function(result){var _ref;var value=(_ref=processResult===null||processResult===void 0?void 0:processResult(result))!=null?_ref:null;callback===null||callback===void 0?void 0:callback(null,value);return Promise.resolve(value);},function(errors){callback===null||callback===void 0?void 0:callback(errors);return Promise.reject(errors);});}var AsyncStorage={getItem:function getItem(key,callback){return createPromise(function(){return window.localStorage.getItem(key);},callback);},setItem:function setItem(key,value,callback){return createPromise(function(){return window.localStorage.setItem(key,value);},callback);},removeItem:function removeItem(key,callback){return createPromise(function(){return window.localStorage.removeItem(key);},callback);},mergeItem:function mergeItem(key,value,callback){return createPromise(function(){return mergeLocalStorageItem(key,value);},callback);},clear:function clear(callback){return createPromise(function(){return window.localStorage.clear();},callback);},getAllKeys:function getAllKeys(callback){return createPromise(function(){var numberOfKeys=window.localStorage.length;var keys=[];for(var i=0;i<numberOfKeys;i+=1){var key=window.localStorage.key(i)||'';keys.push(key);}return keys;},callback);},flushGetRequests:function flushGetRequests(){return undefined;},multiGet:function multiGet(keys,callback){var promises=keys.map(function(key){return AsyncStorage.getItem(key);});var processResult=function processResult(result){return result.map(function(value,i){return[keys[i],value];});};return createPromiseAll(promises,callback,processResult);},multiSet:function multiSet(keyValuePairs,callback){var promises=keyValuePairs.map(function(item){return AsyncStorage.setItem(item[0],item[1]);});return createPromiseAll(promises,callback);},multiRemove:function multiRemove(keys,callback){var promises=keys.map(function(key){return AsyncStorage.removeItem(key);});return createPromiseAll(promises,callback);},multiMerge:function multiMerge(keyValuePairs,callback){var promises=keyValuePairs.map(function(item){return AsyncStorage.mergeItem(item[0],item[1]);});return createPromiseAll(promises,callback);}};export default AsyncStorage;","map":{"version":3,"mappings":"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","names":["mergeOptions","merge","bind","concatArrays","ignoreUndefined","mergeLocalStorageItem","key","value","oldValue","window","localStorage","getItem","oldObject","JSON","parse","newObject","nextValue","stringify","setItem","createPromise","getValue","callback","Promise","resolve","reject","err","createPromiseAll","promises","processResult","all","then","result","errors","AsyncStorage","removeItem","mergeItem","clear","getAllKeys","numberOfKeys","length","keys","i","push","flushGetRequests","undefined","multiGet","map","multiSet","keyValuePairs","item","multiRemove","multiMerge"],"sources":["AsyncStorage.ts"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// @ts-ignore Cannot find module 'merge-options' or its corresponding type declarations\nimport mergeOptions from 'merge-options';\nimport type {\n  AsyncStorageStatic,\n  MultiCallback,\n  MultiGetCallback,\n} from './types';\n\nconst merge = mergeOptions.bind({\n  concatArrays: true,\n  ignoreUndefined: true,\n});\n\nfunction mergeLocalStorageItem(key: string, value: string) {\n  const oldValue = window.localStorage.getItem(key);\n  if (oldValue) {\n    const oldObject = JSON.parse(oldValue);\n    const newObject = JSON.parse(value);\n    const nextValue = JSON.stringify(merge(oldObject, newObject));\n    window.localStorage.setItem(key, nextValue);\n  } else {\n    window.localStorage.setItem(key, value);\n  }\n}\n\nfunction createPromise<Result, Callback extends Function>(\n  getValue: () => Result,\n  callback?: Callback\n): Promise<Result> {\n  return new Promise((resolve, reject) => {\n    try {\n      const value = getValue();\n      callback?.(null, value);\n      resolve(value);\n    } catch (err) {\n      callback?.(err);\n      reject(err);\n    }\n  });\n}\n\nfunction createPromiseAll<ReturnType, Result, ResultProcessor extends Function>(\n  promises: Promise<Result>[],\n  callback?: MultiCallback | MultiGetCallback,\n  processResult?: ResultProcessor\n): Promise<ReturnType> {\n  return Promise.all(promises).then(\n    (result) => {\n      const value = processResult?.(result) ?? null;\n      callback?.(null, value);\n      return Promise.resolve(value);\n    },\n    (errors) => {\n      callback?.(errors);\n      return Promise.reject(errors);\n    }\n  );\n}\n\nconst AsyncStorage: AsyncStorageStatic = {\n  /**\n   * Fetches `key` value.\n   */\n  getItem: (key, callback) => {\n    return createPromise(() => window.localStorage.getItem(key), callback);\n  },\n\n  /**\n   * Sets `value` for `key`.\n   */\n  setItem: (key, value, callback) => {\n    return createPromise(\n      () => window.localStorage.setItem(key, value),\n      callback\n    );\n  },\n\n  /**\n   * Removes a `key`\n   */\n  removeItem: (key, callback) => {\n    return createPromise(() => window.localStorage.removeItem(key), callback);\n  },\n\n  /**\n   * Merges existing value with input value, assuming they are stringified JSON.\n   */\n  mergeItem: (key, value, callback) => {\n    return createPromise(() => mergeLocalStorageItem(key, value), callback);\n  },\n\n  /**\n   * Erases *all* AsyncStorage for the domain.\n   */\n  clear: (callback) => {\n    return createPromise(() => window.localStorage.clear(), callback);\n  },\n\n  /**\n   * Gets *all* keys known to the app, for all callers, libraries, etc.\n   */\n  getAllKeys: (callback) => {\n    return createPromise(() => {\n      const numberOfKeys = window.localStorage.length;\n      const keys: string[] = [];\n      for (let i = 0; i < numberOfKeys; i += 1) {\n        const key = window.localStorage.key(i) || '';\n        keys.push(key);\n      }\n      return keys;\n    }, callback);\n  },\n\n  /**\n   * (stub) Flushes any pending requests using a single batch call to get the data.\n   */\n  flushGetRequests: () => undefined,\n\n  /**\n   * multiGet resolves to an array of key-value pair arrays that matches the\n   * input format of multiSet.\n   *\n   *   multiGet(['k1', 'k2']) -> [['k1', 'val1'], ['k2', 'val2']]\n   */\n  multiGet: (keys, callback) => {\n    const promises = keys.map((key) => AsyncStorage.getItem(key));\n    const processResult = (result: string[]) =>\n      result.map((value, i) => [keys[i], value]);\n    return createPromiseAll(promises, callback, processResult);\n  },\n\n  /**\n   * Takes an array of key-value array pairs.\n   *   multiSet([['k1', 'val1'], ['k2', 'val2']])\n   */\n  multiSet: (keyValuePairs, callback) => {\n    const promises = keyValuePairs.map((item) =>\n      AsyncStorage.setItem(item[0], item[1])\n    );\n    return createPromiseAll(promises, callback);\n  },\n\n  /**\n   * Delete all the keys in the `keys` array.\n   */\n  multiRemove: (keys, callback) => {\n    const promises = keys.map((key) => AsyncStorage.removeItem(key));\n    return createPromiseAll(promises, callback);\n  },\n\n  /**\n   * Takes an array of key-value array pairs and merges them with existing\n   * values, assuming they are stringified JSON.\n   *\n   *   multiMerge([['k1', 'val1'], ['k2', 'val2']])\n   */\n  multiMerge: (keyValuePairs, callback) => {\n    const promises = keyValuePairs.map((item) =>\n      AsyncStorage.mergeItem(item[0], item[1])\n    );\n    return createPromiseAll(promises, callback);\n  },\n};\n\nexport default AsyncStorage;\n"]},"metadata":{},"sourceType":"module"}