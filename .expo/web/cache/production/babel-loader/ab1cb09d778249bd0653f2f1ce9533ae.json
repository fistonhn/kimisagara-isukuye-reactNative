{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"disabled\",\"editable\",\"label\",\"error\",\"selectionColor\",\"underlineColor\",\"outlineColor\",\"activeOutlineColor\",\"outlineStyle\",\"textColor\",\"dense\",\"style\",\"theme\",\"render\",\"multiline\",\"parentState\",\"innerRef\",\"onFocus\",\"forceFocus\",\"onBlur\",\"onChangeText\",\"onLayoutAnimatedText\",\"onLeftAffixLayoutChange\",\"onRightAffixLayoutChange\",\"left\",\"right\",\"placeholderTextColor\",\"testID\",\"contentStyle\"],_excluded2=[\"fontSize\",\"fontWeight\",\"lineHeight\",\"height\",\"backgroundColor\",\"textAlign\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import NativeTextInput from\"react-native-web/dist/exports/TextInput\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import{AdornmentType,AdornmentSide}from\"./Adornment/enums\";import TextInputAdornment,{getAdornmentConfig,getAdornmentStyleAdjustmentForNativeInput}from\"./Adornment/TextInputAdornment\";import{MAXIMIZED_LABEL_FONT_SIZE,MINIMIZED_LABEL_FONT_SIZE,LABEL_WIGGLE_X_OFFSET,ADORNMENT_SIZE,OUTLINE_MINIMIZED_LABEL_Y_OFFSET,LABEL_PADDING_TOP,MIN_DENSE_HEIGHT_OUTLINED,LABEL_PADDING_TOP_DENSE}from\"./constants\";import{calculateLabelTopPosition,calculateInputHeight,calculatePadding,adjustPaddingOut,interpolatePlaceholder,calculateOutlinedIconAndAffixTopPosition,getOutlinedInputColors,getConstants}from\"./helpers\";import InputLabel from\"./Label/InputLabel\";import LabelBackground from\"./Label/LabelBackground\";var TextInputOutlined=function TextInputOutlined(_ref){var _affixTopPosition,_onAffixChange,_topPosition;var _ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled,_ref$editable=_ref.editable,editable=_ref$editable===void 0?true:_ref$editable,label=_ref.label,_ref$error=_ref.error,error=_ref$error===void 0?false:_ref$error,selectionColor=_ref.selectionColor,_underlineColor=_ref.underlineColor,customOutlineColor=_ref.outlineColor,activeOutlineColor=_ref.activeOutlineColor,outlineStyle=_ref.outlineStyle,textColor=_ref.textColor,dense=_ref.dense,style=_ref.style,theme=_ref.theme,_ref$render=_ref.render,render=_ref$render===void 0?function(props){return React.createElement(NativeTextInput,props);}:_ref$render,_ref$multiline=_ref.multiline,multiline=_ref$multiline===void 0?false:_ref$multiline,parentState=_ref.parentState,innerRef=_ref.innerRef,onFocus=_ref.onFocus,forceFocus=_ref.forceFocus,onBlur=_ref.onBlur,onChangeText=_ref.onChangeText,onLayoutAnimatedText=_ref.onLayoutAnimatedText,onLeftAffixLayoutChange=_ref.onLeftAffixLayoutChange,onRightAffixLayoutChange=_ref.onRightAffixLayoutChange,left=_ref.left,right=_ref.right,placeholderTextColor=_ref.placeholderTextColor,_ref$testID=_ref.testID,testID=_ref$testID===void 0?'text-input-outlined':_ref$testID,contentStyle=_ref.contentStyle,rest=_objectWithoutProperties(_ref,_excluded);var adornmentConfig=getAdornmentConfig({left:left,right:right});var colors=theme.colors,isV3=theme.isV3,roundness=theme.roundness;var font=isV3?theme.fonts.bodyLarge:theme.fonts.regular;var hasActiveOutline=parentState.focused||error;var _getConstants=getConstants(isV3),INPUT_PADDING_HORIZONTAL=_getConstants.INPUT_PADDING_HORIZONTAL,MIN_HEIGHT=_getConstants.MIN_HEIGHT,ADORNMENT_OFFSET=_getConstants.ADORNMENT_OFFSET;var _ref4=StyleSheet.flatten(style)||{},fontSizeStyle=_ref4.fontSize,fontWeight=_ref4.fontWeight,lineHeight=_ref4.lineHeight,height=_ref4.height,_ref4$backgroundColor=_ref4.backgroundColor,backgroundColor=_ref4$backgroundColor===void 0?colors===null||colors===void 0?void 0:colors.background:_ref4$backgroundColor,textAlign=_ref4.textAlign,viewStyle=_objectWithoutProperties(_ref4,_excluded2);var fontSize=fontSizeStyle||MAXIMIZED_LABEL_FONT_SIZE;var _getOutlinedInputColo=getOutlinedInputColors({activeOutlineColor:activeOutlineColor,customOutlineColor:customOutlineColor,textColor:textColor,disabled:disabled,error:error,theme:theme}),inputTextColor=_getOutlinedInputColo.inputTextColor,activeColor=_getOutlinedInputColo.activeColor,outlineColor=_getOutlinedInputColo.outlineColor,placeholderColor=_getOutlinedInputColo.placeholderColor,errorColor=_getOutlinedInputColo.errorColor;var labelScale=MINIMIZED_LABEL_FONT_SIZE/fontSize;var fontScale=MAXIMIZED_LABEL_FONT_SIZE/fontSize;var labelWidth=parentState.labelLayout.width;var labelHeight=parentState.labelLayout.height;var labelHalfWidth=labelWidth/2;var labelHalfHeight=labelHeight/2;var baseLabelTranslateX=(I18nManager.getConstants().isRTL?1:-1)*(labelHalfWidth-labelScale*labelWidth/2-(fontSize-MINIMIZED_LABEL_FONT_SIZE)*labelScale);var labelTranslationXOffset=0;var isAdornmentLeftIcon=adornmentConfig.some(function(_ref2){var side=_ref2.side,type=_ref2.type;return side===AdornmentSide.Left&&type===AdornmentType.Icon;});if(isAdornmentLeftIcon){labelTranslationXOffset=(I18nManager.getConstants().isRTL?-1:1)*(ADORNMENT_SIZE+ADORNMENT_OFFSET-(isV3?0:8));}var minInputHeight=(dense?MIN_DENSE_HEIGHT_OUTLINED:MIN_HEIGHT)-LABEL_PADDING_TOP;var inputHeight=calculateInputHeight(labelHeight,height,minInputHeight);var topPosition=calculateLabelTopPosition(labelHeight,inputHeight,LABEL_PADDING_TOP);if(height&&typeof height!=='number'){console.warn('Currently we support only numbers in height prop');}var paddingSettings={height:height?+height:null,labelHalfHeight:labelHalfHeight,offset:LABEL_PADDING_TOP,multiline:multiline?multiline:null,dense:dense?dense:null,topPosition:topPosition,fontSize:fontSize,lineHeight:lineHeight,label:label,scale:fontScale,isAndroid:Platform.OS==='android',styles:StyleSheet.flatten(dense?styles.inputOutlinedDense:styles.inputOutlined)};var pad=calculatePadding(paddingSettings);var paddingOut=adjustPaddingOut(_objectSpread(_objectSpread({},paddingSettings),{},{pad:pad}));var baseLabelTranslateY=-labelHalfHeight-(topPosition+OUTLINE_MINIMIZED_LABEL_Y_OFFSET);var placeholderOpacity=hasActiveOutline?interpolatePlaceholder(parentState.labeled,hasActiveOutline):parentState.labelLayout.measured?1:0;var placeholderStyle={position:'absolute',left:0,paddingHorizontal:INPUT_PADDING_HORIZONTAL};var labelProps={label:label,onLayoutAnimatedText:onLayoutAnimatedText,placeholderOpacity:placeholderOpacity,error:error,placeholderStyle:placeholderStyle,baseLabelTranslateY:baseLabelTranslateY,baseLabelTranslateX:baseLabelTranslateX,font:font,fontSize:fontSize,lineHeight:lineHeight,fontWeight:fontWeight,labelScale:labelScale,wiggleOffsetX:LABEL_WIGGLE_X_OFFSET,topPosition:topPosition,hasActiveOutline:hasActiveOutline,activeColor:activeColor,placeholderColor:placeholderColor,backgroundColor:backgroundColor,errorColor:errorColor,labelTranslationXOffset:labelTranslationXOffset,roundness:roundness,maxFontSizeMultiplier:rest.maxFontSizeMultiplier,testID:testID,contentStyle:contentStyle};var minHeight=height||(dense?MIN_DENSE_HEIGHT_OUTLINED:MIN_HEIGHT);var outlinedHeight=inputHeight+(!height?dense?LABEL_PADDING_TOP_DENSE/2:LABEL_PADDING_TOP:0);var leftLayout=parentState.leftLayout,rightLayout=parentState.rightLayout;var leftAffixTopPosition=calculateOutlinedIconAndAffixTopPosition({height:outlinedHeight,affixHeight:leftLayout.height||0,labelYOffset:-OUTLINE_MINIMIZED_LABEL_Y_OFFSET});var rightAffixTopPosition=calculateOutlinedIconAndAffixTopPosition({height:outlinedHeight,affixHeight:rightLayout.height||0,labelYOffset:-OUTLINE_MINIMIZED_LABEL_Y_OFFSET});var iconTopPosition=calculateOutlinedIconAndAffixTopPosition({height:outlinedHeight,affixHeight:ADORNMENT_SIZE,labelYOffset:-OUTLINE_MINIMIZED_LABEL_Y_OFFSET});var rightAffixWidth=right?rightLayout.width||ADORNMENT_SIZE:ADORNMENT_SIZE;var leftAffixWidth=left?leftLayout.width||ADORNMENT_SIZE:ADORNMENT_SIZE;var adornmentStyleAdjustmentForNativeInput=getAdornmentStyleAdjustmentForNativeInput({adornmentConfig:adornmentConfig,rightAffixWidth:rightAffixWidth,leftAffixWidth:leftAffixWidth,mode:'outlined',isV3:isV3});var affixTopPosition=(_affixTopPosition={},_defineProperty(_affixTopPosition,AdornmentSide.Left,leftAffixTopPosition),_defineProperty(_affixTopPosition,AdornmentSide.Right,rightAffixTopPosition),_affixTopPosition);var onAffixChange=(_onAffixChange={},_defineProperty(_onAffixChange,AdornmentSide.Left,onLeftAffixLayoutChange),_defineProperty(_onAffixChange,AdornmentSide.Right,onRightAffixLayoutChange),_onAffixChange);var adornmentProps={adornmentConfig:adornmentConfig,forceFocus:forceFocus,topPosition:(_topPosition={},_defineProperty(_topPosition,AdornmentType.Icon,iconTopPosition),_defineProperty(_topPosition,AdornmentType.Affix,affixTopPosition),_topPosition),onAffixChange:onAffixChange,isTextInputFocused:parentState.focused,maxFontSizeMultiplier:rest.maxFontSizeMultiplier};if(adornmentConfig.length){adornmentProps=_objectSpread(_objectSpread({},adornmentProps),{},{left:left,right:right,textStyle:_objectSpread(_objectSpread({},font),{},{fontSize:fontSize,lineHeight:lineHeight,fontWeight:fontWeight}),visible:parentState.labeled});}return React.createElement(View,{style:viewStyle},React.createElement(Outline,{isV3:isV3,style:outlineStyle,roundness:roundness,hasActiveOutline:hasActiveOutline,focused:parentState.focused,activeColor:activeColor,outlineColor:outlineColor,backgroundColor:backgroundColor}),React.createElement(View,null,React.createElement(View,{style:[styles.labelContainer,{paddingTop:LABEL_PADDING_TOP,minHeight:minHeight}]},React.createElement(InputLabel,{parentState:parentState,labelProps:labelProps,labelBackground:LabelBackground,maxFontSizeMultiplier:rest.maxFontSizeMultiplier}),render===null||render===void 0?void 0:render(_objectSpread(_objectSpread({testID:testID},rest),{},{ref:innerRef,onChangeText:onChangeText,placeholder:label?parentState.placeholder:rest.placeholder,placeholderTextColor:placeholderTextColor||placeholderColor,editable:!disabled&&editable,selectionColor:typeof selectionColor==='undefined'?activeColor:selectionColor,onFocus:onFocus,onBlur:onBlur,underlineColorAndroid:'transparent',multiline:multiline,style:[styles.input,!multiline||multiline&&height?{height:inputHeight}:{},paddingOut,_objectSpread(_objectSpread({},font),{},{fontSize:fontSize,lineHeight:lineHeight,fontWeight:fontWeight,color:inputTextColor,textAlignVertical:multiline?'top':'center',textAlign:textAlign?textAlign:I18nManager.getConstants().isRTL?'right':'left',paddingHorizontal:INPUT_PADDING_HORIZONTAL}),Platform.OS==='web'&&{outline:'none'},adornmentStyleAdjustmentForNativeInput,contentStyle]}))),React.createElement(TextInputAdornment,adornmentProps)));};export default TextInputOutlined;var Outline=function Outline(_ref3){var isV3=_ref3.isV3,activeColor=_ref3.activeColor,backgroundColor=_ref3.backgroundColor,hasActiveOutline=_ref3.hasActiveOutline,focused=_ref3.focused,outlineColor=_ref3.outlineColor,roundness=_ref3.roundness,style=_ref3.style;return React.createElement(View,{testID:\"text-input-outline\",pointerEvents:\"none\",style:[styles.outline,{backgroundColor:backgroundColor,borderRadius:roundness,borderWidth:(isV3?hasActiveOutline:focused)?2:1,borderColor:hasActiveOutline?activeColor:outlineColor},style]});};var styles=StyleSheet.create({outline:{position:'absolute',left:0,right:0,top:6,bottom:0},labelContainer:{paddingBottom:0},input:{margin:0,zIndex:1},inputOutlined:{paddingTop:8,paddingBottom:8},inputOutlinedDense:{paddingTop:4,paddingBottom:4}});","map":{"version":3,"mappings":"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","names":["React","AdornmentType","AdornmentSide","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_DENSE_HEIGHT_OUTLINED","LABEL_PADDING_TOP_DENSE","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","interpolatePlaceholder","calculateOutlinedIconAndAffixTopPosition","getOutlinedInputColors","getConstants","InputLabel","LabelBackground","TextInputOutlined","_ref","disabled","editable","label","error","selectionColor","_underlineColor","underlineColor","customOutlineColor","outlineColor","activeOutlineColor","outlineStyle","textColor","dense","style","theme","render","props","NativeTextInput","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","contentStyle","rest","adornmentConfig","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","lineHeight","height","backgroundColor","background","textAlign","viewStyle","inputTextColor","activeColor","placeholderColor","errorColor","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","_ref2","type","Left","Icon","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","measured","placeholderStyle","position","paddingHorizontal","labelProps","wiggleOffsetX","maxFontSizeMultiplier","minHeight","outlinedHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","View","Outline","labelContainer","paddingTop","labelBackground","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","outline","_ref3","pointerEvents","borderRadius","borderWidth","borderColor","create","top","bottom","paddingBottom","margin","zIndex"],"sources":["TextInputOutlined.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP,\n  MIN_DENSE_HEIGHT_OUTLINED,\n  LABEL_PADDING_TOP_DENSE,\n} from './constants';\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n  getOutlinedInputColors,\n  getConstants,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  outlineStyle,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-outlined',\n  contentStyle,\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight,\n    height,\n    backgroundColor = colors?.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    LABEL_PADDING_TOP\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  };\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: backgroundColor as ColorValue,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\n\n  const outlinedHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE / 2 : LABEL_PADDING_TOP) : 0);\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n      isV3,\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        isV3={isV3}\n        style={outlineStyle}\n        roundness={roundness}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop: LABEL_PADDING_TOP,\n              minHeight,\n            },\n          ]}\n        >\n          <InputLabel\n            parentState={parentState}\n            labelProps={labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n          {render?.({\n            testID,\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                lineHeight,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.getConstants().isRTL\n                  ? 'right'\n                  : 'left',\n                paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n              contentStyle,\n            ],\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\ntype OutlineProps = {\n  isV3: boolean;\n  activeColor: string;\n  backgroundColor: ColorValue;\n  hasActiveOutline?: boolean;\n  focused?: boolean;\n  outlineColor?: string;\n  roundness?: number;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst Outline = ({\n  isV3,\n  activeColor,\n  backgroundColor,\n  hasActiveOutline,\n  focused,\n  outlineColor,\n  roundness,\n  style,\n}: OutlineProps) => (\n  <View\n    testID=\"text-input-outline\"\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: roundness,\n        borderWidth: (isV3 ? hasActiveOutline : focused) ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n      style,\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}