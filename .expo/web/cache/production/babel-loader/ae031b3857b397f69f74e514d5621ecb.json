{"ast":null,"code":"import{Reanimated}from\"./reanimatedWrapper\";import{State}from\"../../State\";import{tagMessage}from\"../../utils\";var warningMessage=tagMessage('react-native-reanimated is required in order to use synchronous state management');var REANIMATED_AVAILABLE=(Reanimated===null||Reanimated===void 0?void 0:Reanimated.useSharedValue)!==undefined;var setGestureState=Reanimated===null||Reanimated===void 0?void 0:Reanimated.setGestureState;export var GestureStateManager={create:function(){var _f=function _f(handlerTag){return{begin:function(){var _f=function _f(){if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.BEGAN);}else{console.warn(warningMessage);}};_f._closure={REANIMATED_AVAILABLE:REANIMATED_AVAILABLE,setGestureState:setGestureState,handlerTag:handlerTag,State:{BEGAN:State.BEGAN},warningMessage:warningMessage};_f.asString=\"function _f(){const{REANIMATED_AVAILABLE,setGestureState,handlerTag,State,warningMessage}=jsThis._closure;{if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.BEGAN);}else{console.warn(warningMessage);}}}\";_f.__workletHash=463937378312;_f.__location=\"F:\\\\kimisagara\\\\official\\\\recipes-app-react-native\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\gestureStateManager.js (14:13)\";return _f;}(),activate:function(){var _f=function _f(){if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.ACTIVE);}else{console.warn(warningMessage);}};_f._closure={REANIMATED_AVAILABLE:REANIMATED_AVAILABLE,setGestureState:setGestureState,handlerTag:handlerTag,State:{ACTIVE:State.ACTIVE},warningMessage:warningMessage};_f.asString=\"function _f(){const{REANIMATED_AVAILABLE,setGestureState,handlerTag,State,warningMessage}=jsThis._closure;{if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.ACTIVE);}else{console.warn(warningMessage);}}}\";_f.__workletHash=5304131972715;_f.__location=\"F:\\\\kimisagara\\\\official\\\\recipes-app-react-native\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\gestureStateManager.js (23:16)\";return _f;}(),fail:function(){var _f=function _f(){if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.FAILED);}else{console.warn(warningMessage);}};_f._closure={REANIMATED_AVAILABLE:REANIMATED_AVAILABLE,setGestureState:setGestureState,handlerTag:handlerTag,State:{FAILED:State.FAILED},warningMessage:warningMessage};_f.asString=\"function _f(){const{REANIMATED_AVAILABLE,setGestureState,handlerTag,State,warningMessage}=jsThis._closure;{if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.FAILED);}else{console.warn(warningMessage);}}}\";_f.__workletHash=180936263236;_f.__location=\"F:\\\\kimisagara\\\\official\\\\recipes-app-react-native\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\gestureStateManager.js (32:12)\";return _f;}(),end:function(){var _f=function _f(){if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.END);}else{console.warn(warningMessage);}};_f._closure={REANIMATED_AVAILABLE:REANIMATED_AVAILABLE,setGestureState:setGestureState,handlerTag:handlerTag,State:{END:State.END},warningMessage:warningMessage};_f.asString=\"function _f(){const{REANIMATED_AVAILABLE,setGestureState,handlerTag,State,warningMessage}=jsThis._closure;{if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.END);}else{console.warn(warningMessage);}}}\";_f.__workletHash=14407529741256;_f.__location=\"F:\\\\kimisagara\\\\official\\\\recipes-app-react-native\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\gestureStateManager.js (41:11)\";return _f;}()};};_f._closure={REANIMATED_AVAILABLE:REANIMATED_AVAILABLE,setGestureState:setGestureState,State:{BEGAN:State.BEGAN,ACTIVE:State.ACTIVE,FAILED:State.FAILED,END:State.END},warningMessage:warningMessage};_f.asString=\"function create(handlerTag){const{REANIMATED_AVAILABLE,setGestureState,State,warningMessage}=jsThis._closure;{return{begin:function(){'worklet';if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.BEGAN);}else{console.warn(warningMessage);}},activate:function(){'worklet';if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.ACTIVE);}else{console.warn(warningMessage);}},fail:function(){'worklet';if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.FAILED);}else{console.warn(warningMessage);}},end:function(){'worklet';if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.END);}else{console.warn(warningMessage);}}};}}\";_f.__workletHash=3925022521265;_f.__location=\"F:\\\\kimisagara\\\\official\\\\recipes-app-react-native\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\gestureStateManager.js\";return _f;}()};","map":{"version":3,"mappings":"AAAA,OAASA,UAAT,2BACA,OAASC,KAAT,mBACA,OAASC,UAAT,mBASA,GAAMC,eAAc,CAAGD,UAAU,CAC/B,kFAD+B,CAAjC,CAMA,GAAME,qBAAoB,CAAG,WAAU,OAAV,YAAU,SAAV,kBAAU,CAAEC,cAAZ,IAA+BC,SAA5D,CACA,GAAMC,gBAAe,CAAGP,UAAH,SAAGA,UAAH,iBAAGA,UAAU,CAAEO,eAApC,CAEA,MAAO,IAAMC,oBAAmB,CAAG,CACjCC,MAAM,+BAACC,UAAD,CAA8C,CAElD,MAAO,CACLC,KAAK,gCAAQ,CAEX,GAAIP,oBAAJ,CAA0B,CACxBG,eAAe,CAACG,UAAD,CAAaT,KAAK,CAACW,KAAnB,CAAf,CACD,CAFD,IAEO,CACLC,OAAO,CAACC,IAAR,CAAaX,cAAb,EACD,CACF,CARI,mCArBXC,qCASAG,eAAMJ,YAAcO,UAAGR,mBACrB,meAWS,CAULa,QAAQ,gCAAQ,CAEd,GAAIX,oBAAJ,CAA0B,CACxBG,eAAe,CAACG,UAAD,CAAaT,KAAK,CAACe,MAAnB,CAAf,CACD,CAFD,IAEO,CACLH,OAAO,CAACC,IAAR,CAAaX,cAAb,EACD,CACF,CAjBI,mCArBXC,qCASAG,eAAMJ,YAAcO,UAAGR,oBACrB,seAWS,CAmBLe,IAAI,gCAAQ,CAEV,GAAIb,oBAAJ,CAA0B,CACxBG,eAAe,CAACG,UAAD,CAAaT,KAAK,CAACiB,MAAnB,CAAf,CACD,CAFD,IAEO,CACLL,OAAO,CAACC,IAAR,CAAaX,cAAb,EACD,CACF,CA1BI,mCArBXC,qCASAG,eAAMJ,YAAcO,UAAGR,oBACrB,qeAWS,CA4BLiB,GAAG,gCAAQ,CAET,GAAIf,oBAAJ,CAA0B,CACxBG,eAAe,CAACG,UAAD,CAAaT,KAAK,CAACmB,GAAnB,CAAf,CACD,CAFD,IAEO,CACLP,OAAO,CAACC,IAAR,CAAaX,cAAb,EACD,CACF,oCAxDPC,qCASAG,eAAMJ,YAAcO,UAAGR,iBACrB,ieAWS,CAAP,CAqCD,yEAhBKK,eAAIH,cA1BSH,WAAGD,QAQUC,oBASAA,iBASAA,0BAEnBE,m3BA1BoB,CAA5B","names":["Reanimated","State","tagMessage","warningMessage","REANIMATED_AVAILABLE","useSharedValue","undefined","setGestureState","GestureStateManager","create","handlerTag","begin","BEGAN","console","warn","activate","ACTIVE","fail","FAILED","end","END"],"sources":["gestureStateManager.ts"],"sourcesContent":["import { Reanimated } from './reanimatedWrapper';\nimport { State } from '../../State';\nimport { tagMessage } from '../../utils';\n\nexport interface GestureStateManagerType {\n  begin: () => void;\n  activate: () => void;\n  fail: () => void;\n  end: () => void;\n}\n\nconst warningMessage = tagMessage(\n  'react-native-reanimated is required in order to use synchronous state management'\n);\n\n// check if reanimated module is available, but look for useSharedValue as conditional\n// require of reanimated can sometimes return content of `utils.ts` file (?)\nconst REANIMATED_AVAILABLE = Reanimated?.useSharedValue !== undefined;\nconst setGestureState = Reanimated?.setGestureState;\n\nexport const GestureStateManager = {\n  create(handlerTag: number): GestureStateManagerType {\n    'worklet';\n    return {\n      begin: () => {\n        'worklet';\n        if (REANIMATED_AVAILABLE) {\n          setGestureState(handlerTag, State.BEGAN);\n        } else {\n          console.warn(warningMessage);\n        }\n      },\n\n      activate: () => {\n        'worklet';\n        if (REANIMATED_AVAILABLE) {\n          setGestureState(handlerTag, State.ACTIVE);\n        } else {\n          console.warn(warningMessage);\n        }\n      },\n\n      fail: () => {\n        'worklet';\n        if (REANIMATED_AVAILABLE) {\n          setGestureState(handlerTag, State.FAILED);\n        } else {\n          console.warn(warningMessage);\n        }\n      },\n\n      end: () => {\n        'worklet';\n        if (REANIMATED_AVAILABLE) {\n          setGestureState(handlerTag, State.END);\n        } else {\n          console.warn(warningMessage);\n        }\n      },\n    };\n  },\n};\n"]},"metadata":{},"sourceType":"module"}